import { A as i, ao as l, f as c, C as s, b_ as n, y as d, e as u, l as o, X as t } from "./index-54e545bb.js"; const m = { class: "flex h-10.5 items-center justify-between mx-4 md:mr-0" }, g = { class: "flex items-center gap-2 max-w-[50%]" }, p = { class: "flex items-center gap-2" }, _ = { __name: "LayoutHeader", setup(e) { const a = i(!1); return l(() => { a.value = !0 }), (r, h) => a.value ? (u(), c(n, { key: 0, to: "#app-header" }, [s(r.$slots, "default", {}, () => [o("header", m, [o("div", g, [s(r.$slots, "left-header")]), o("div", p, [s(r.$slots, "right-header", { class: "flex items-center gap-2" })])])])])) : d("", !0) } }, f = _, w = t({ url: "frappe.client.insert", makeParams({ title: e, content: a, category: r }) { return { doc: { doctype: "HD Article", title: e, content: a, category: r } } }, validate({ doc: e }) { if (!e.title) throw "Title is required"; if (!e.content) throw "Content is required" } }), y = t({ url: "frappe.client.set_value" }), v = t({ url: "frappe.client.delete" }), b = t({ url: "terrasuitehelpdesk.api.knowledge_base.delete_articles", makeParams({ articles: e }) { return { articles: e } }, validate({ articles: e }) { if (!e) throw "Articles are required" } }), q = t({ url: "terrasuitehelpdesk.api.knowledge_base.create_category", makeParams({ title: e }) { return { title: e } }, validate({ title: e }) { if (!e) throw "Title is required" } }), C = t({ url: "frappe.client.set_value", validate({ name: e, value: a }) { if (!a) throw "Title is required" } }), P = t({ url: "terrasuitehelpdesk.api.knowledge_base.move_to_category", makeParams({ category: e, articles: a }) { return { category: e, articles: a } }, validate({ category: e, articles: a }) { if (!e) throw { message: "Category is required" }; if (!a) throw { message: "Articles are required" } } }), T = t({ url: "terrasuitehelpdesk.api.knowledge_base.merge_category", makeParams({ source: e, target: a }) { return { source: e, target: a } }, validate({ source: e, target: a }) { if (!e) throw { message: "Category is required" }; if (!a) throw { message: "Target is required" } } }), A = t({ url: "terrasuitehelpdesk.api.knowledge_base.get_categories", cache: ["categories"] }), x = t({ url: "terrasuitehelpdesk.api.knowledge_base.get_category_title", cache: ["categoryName"], makeParams({ category: e }) { return { category: e } } }), H = t({ url: "run_doc_method", debounce: 300, makeParams: ({ articleId: e, action: a }) => ({ dt: "HD Article", dn: e, method: "set_feedback", args: { value: a } }) }), N = t({ url: "terrasuitehelpdesk.api.knowledge_base.increment_views", makeParams: ({ article: e }) => ({ article: e }) }); export { f as L, C as a, T as b, b as c, v as d, w as e, A as f, x as g, N as i, P as m, q as n, H as s, y as u };
//# sourceMappingURL=knowledgeBase-de4d1c97.js.map
