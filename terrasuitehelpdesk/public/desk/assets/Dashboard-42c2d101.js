import { L as re, a as oe } from "./users-ff29ac86.js"; import { bq as V, d as B, A as C, M as Q, bE as ne, bv as ie, a4 as j, e as c, k as g, az as P, aD as U, l as _, t as Y, F as N, aY as le, c as F, f as L, h as v, x as H, y as O, aX as ue, a as de, p as ce, X as z, N as pe, g as S, w as M, G as E, r as me, L as he, v as R, I as W, j as fe } from "./index-54e545bb.js"; import { L as ye } from "./knowledgeBase-de4d1c97.js"; import { _ as xe } from "./Dropdown.vue_vue_type_script_setup_true_lang-20398480.js"; import { _ as ve } from "./DateRangePicker.vue_vue_type_script_setup_true_lang-fc0fa242.js"; import "./more-horizontal-b561c647.js"; import "./dayjs-8f71cd34.js"; import { _ as Z } from "./Link-5130f40e.js"; function q(e) { return e.split("_").map(t => t.charAt(0).toUpperCase() + t.slice(1)).join(" ") } function D(e, t = 0, s = !1) { if (isNaN(e)) return e.toString(); let a = "en-US"; return s ? new Intl.NumberFormat(a, { notation: "compact", maximumFractionDigits: t }).format(e) : (t = t || be(e), new Intl.NumberFormat(a, { minimumFractionDigits: t, maximumFractionDigits: t }).format(e)) } function be(e) { if (!e || isNaN(e)) return 0; const t = e.toString(), s = t.indexOf("."); return s === -1 ? 0 : Math.min(t.length - s - 1, 2) } function ge(e, t, s = "day") { return e ? (s && (t = { second: "MMMM D, YYYY h:mm:ss A", minute: "MMMM D, YYYY h:mm A", hour: "MMMM D, YYYY h:00 A", day: "MMMM D, YYYY", week: "MMM Do, YYYY", month: "MMMM, YYYY", year: "YYYY", quarter: "[Q]Q, YYYY" }[s]), t || (t = "MMM D, YY"), V(e).format(t)) : "" } function G(e) { return e && typeof e == "object" && !Array.isArray(e) } function k(e, ...t) { if (!t.length) return e; const s = t.shift(); if (!s || !G(e) || !G(s)) return k(e, ...t); let a = Object.assign({}, e); return Object.keys(s).forEach(n => { G(s[n]) && n in a ? a[n] = k(a[n], s[n]) : a[n] = s[n] }), k(a, ...t) } const we = 0, _e = 10, Le = 30, De = 10, Ae = 20, Ye = 18, Ce = 24; function ke(e) {
  var y; const t = e.title, s = e.subtitle, a = t ? 1 : 0, n = s ? 1 : 0; e.xAxis.title, e.yAxis.title, (y = e.y2Axis) != null && y.title; const p = e.series.length > 1 ? 1 : 0, r = Me(e), b = Se(e); return {
    animation: !0, animationDuration: 700, textStyle: { fontFamily: ["InterVar", "sans-serif"] }, title: J(t, s), color: e.colors, grid: { left: "1%", right: e.swapXY ? "2.5%" : "1.5%", top: we + Ae * a + Ye * n + Ce, bottom: _e + Le * p, containLabel: !0 }, xAxis: r, yAxis: b, series: [], tooltip: {
      show: !0, trigger: "axis", formatter: x => {
        if (Array.isArray(x) && (x = x.filter(m => { var o; return ((o = m.value) == null ? void 0 : o[1]) !== 0 }).sort((m, o) => { var i, l; return ((i = o.value) == null ? void 0 : i[1]) - ((l = m.value) == null ? void 0 : l[1]) })), !Array.isArray(x)) {
          const m = x, o = e.swapXY ? m.value[0] : m.value[1], i = isNaN(o) ? o : D(o); return `
                <div class="flex items-center justify-between gap-5">
                  <div>${m.name}</div>
                  <div class="font-bold">${i}</div>
                </div>
              `} if (Array.isArray(x)) return x.map((o, i) => {
            const l = e.swapXY ? o.value[1] : o.value[0], w = e.swapXY ? o.value[0] : o.value[1], h = e.xAxis.type == "time" ? ge(l, void 0, e.xAxis.timeGrain) : l, T = isNaN(w) ? w : D(w); return `
              <div class="flex flex-col">
                ${i == 0 ? `<div>${h}</div>` : ""}
                <div class="flex items-center justify-between gap-5">
                  <div class="flex gap-1 items-center">
                    ${o.marker}
                    <div>${q(o.seriesName)}:</div>
                  </div>
                  <div class="font-bold">${T}</div>
                </div>
              </div>
            `}).join("")
      }, confine: !0, appendToBody: !1, axisPointer: { type: "shadow" }
    }, legend: { show: p, type: "scroll", bottom: De, orient: "horizontal", itemGap: 12, padding: [0, 25], formatter: function (x) { return q(x) }, textStyle: { padding: [0, 0, 0, -5], color: "#000" }, icon: "circle", pageIcons: { horizontal: ["M 17 3 h 2 c 0.386 0 0.738 0.223 0.904 0.572 s 0.115 0.762 -0.13 1.062 L 11.292 15 l 8.482 10.367 c 0.245 0.299 0.295 0.712 0.13 1.062 S 19.386 27 19 27 h -2 c -0.3 0 -0.584 -0.135 -0.774 -0.367 l -9 -11 c -0.301 -0.369 -0.301 -0.898 0 -1.267 l 9 -11 C 16.416 3.135 16.7 3 17 3 Z", "M 12 27 h -2 c -0.386 0 -0.738 -0.223 -0.904 -0.572 s -0.115 -0.762 0.13 -1.062 L 17.708 15 L 9.226 4.633 c -0.245 -0.299 -0.295 -0.712 -0.13 -1.062 S 9.614 3 10 3 h 2 c 0.3 0 0.584 0.135 0.774 0.367 l 9 11 c 0.301 0.369 0.301 0.898 0 1.267 l -9 11 C 12.584 26.865 12.3 27 12 27 Z"] }, pageIconColor: "#64748B", pageInactiveColor: "#C0CCDA", pageIconSize: 10, pageTextStyle: { color: "#64748B" }, animationDurationUpdate: 300 }
  }
} function J(e, t) { return { top: "4px", left: "0.8%", text: e, subtext: t, padding: 0, itemGap: -3, textStyle: { fontSize: 14, fontWeight: 500, lineHeight: 24 }, subtextStyle: { fontSize: 13, fontWeight: 400, lineHeight: 20 } } } function Me(e) { const t = e.swapXY ? { show: !0, type: "value", z: 2, scale: !1, boundaryGap: !1, position: "top", name: `${e.yAxis.title} →`, nameGap: 6, nameLocation: "end", nameTextStyle: { align: "right", verticalAlign: "bottom", padding: [0, 0, 26, 0], backgroundColor: "#fff", borderColor: "#fff", borderWidth: 4 }, splitLine: { show: !0, width: 1 }, axisLine: { show: !1, onZero: !1 }, axisTick: { show: !1, alignWithLabel: !0, formatter: function (s) { return D(s, 1, !0) } }, axisLabel: { show: !0, hideOverlap: !0, margin: 8, formatter: function (s) { return D(s, 1, !0) } } } : { z: 2, type: e.xAxis.type, scale: !0, splitLine: { show: !1 }, axisLine: { show: !0 }, axisTick: { show: !1, alignWithLabel: !0 }, axisLabel: { show: !0, hideOverlap: !0, showMaxLabel: e.xAxis.type === "category" || e.xAxis.type === "value", margin: 8 } }; return k(t, e.swapXY ? e.yAxis.echartOptions : e.xAxis.echartOptions) } function Se(e) { var a, n, p, r, b; let t = e.swapXY ? { show: !0, type: e.xAxis.type, z: 2, scale: !0, inverse: "true", splitLine: { show: !1 }, axisLine: { show: !0 }, axisTick: { show: !1, alignWithLabel: !0 }, axisLabel: { show: !0, hideOverlap: !0, margin: 6 } } : { show: !0, type: "value", z: 2, scale: !1, boundaryGap: ["0%", "1%"], name: `↑ ${e.yAxis.title}`, nameGap: 6, nameLocation: "end", nameTextStyle: { align: "left", verticalAlign: "top", padding: [0, 0, 0, -2], backgroundColor: "#fff", borderColor: "#fff", borderWidth: 4 }, splitLine: { show: !0, width: 1 }, axisLine: { show: !1, onZero: !1 }, axisTick: { show: !1, alignWithLabel: !0 }, axisLabel: { show: !0, hideOverlap: !0, margin: 8, formatter: function (y) { return D(y, 1, !0) } }, min: e.yAxis.yMin, max: e.yAxis.yMax }; t = k(t, e.swapXY ? e.xAxis.echartOptions : e.yAxis.echartOptions); let s = { show: !1, type: "value", z: 2, alignTicks: !0, scale: !1, boundaryGap: ["0%", "1%"], name: `${(a = e.y2Axis) == null ? void 0 : a.title} ↑`, nameLocation: "end", nameTextStyle: { align: "right", verticalAlign: "top", padding: [0, 5, 0, 0], backgroundColor: "#fff" }, nameGap: 6, splitLine: { show: !0, width: 1 }, axisLine: { show: !1, onZero: !1 }, axisTick: { show: !1, alignWithLabel: !0 }, axisLabel: { show: !0, hideOverlap: !0, margin: 8, formatter: function (y) { return D(y, 1, !0) } }, min: (n = e.y2Axis) == null ? void 0 : n.yMin, max: (p = e.y2Axis) == null ? void 0 : p.yMax }; return s = k(s, e.swapXY ? (r = e.y2Axis) == null ? void 0 : r.echartOptions : (b = e.y2Axis) == null ? void 0 : b.echartOptions), e.swapXY ? [t] : [t, s] } function Oe(e) { const t = e.data || [], s = ke(e); if (e.xAxis.type === "time" && e.swapXY) throw new Error("Swap axes is not supported for time series data"); if (e.series.find(r => r.axis === "y2" || r.type !== "bar") && e.swapXY) throw new Error("Swap axes is not supported for non-bar series or y2 axis"); const a = e.swapXY, n = e.series.slice().reverse().findIndex(r => r.type === "bar"); return e.series.some(r => r.axis === "y2") && (s.yAxis[1].show = !0), s.series = e.series.map((r, b) => { let y = "top"; r.type == "bar" && e.stacked && (y = b == n ? "top" : "inside"), r.type == "bar" && a && (y = "right"); const x = { type: r.type, name: r.name, data: t.map(o => { let i, l; return a ? (i = o[r.name], l = o[e.xAxis.key]) : (i = o[e.xAxis.key], l = o[r.name]), [i, l] }), yAxisIndex: r.axis === "y2" ? 1 : 0, label: { show: r.showDataLabels, position: y, formatter: o => { var l, w; const i = a ? (l = o.value) == null ? void 0 : l[0] : (w = o.value) == null ? void 0 : w[1]; return D(i, 1, !0) }, fontSize: 11 }, labelLayout: { hideOverlap: !0 }, itemStyle: { color: r.color } }; let m = {}; return r.type === "bar" && (m = Te(e, r)), r.type === "line" && (m = Ie(e, r)), r.type === "area" && (m = $e(e, r)), k(x, m, r.echartOptions) }), k(s, e.echartOptions) } function Te(e, t) { const s = e.swapXY ? [0, 2, 2, 0] : [2, 2, 0, 0], a = e.series.findIndex(r => r.name === t.name), p = e.series.slice().reverse().findIndex(r => r.type === "bar") === a; return { stack: e.stacked ? "stack" : void 0, barMaxWidth: 60, itemStyle: { borderRadius: e.stacked ? p ? s : 0 : s } } } function Ie(e, t) { return { connectNulls: !0, symbol: "circle", symbolSize: 7, showSymbol: t.showDataPoints || t.showDataLabels, emphasis: {}, lineStyle: { width: t.lineWidth || 2, type: t.lineType } } } function $e(e, t) { return { type: "line", showSymbol: t.showDataPoints, areaStyle: { color: t.color, opacity: t.fillOpacity || .5 } } } const K = B({ __name: "ECharts", props: { options: {}, events: {}, error: {} }, setup(e) { const t = e; let s; const a = C(); return Q(() => { var r; if (!a.value) return; s = ne(a.value, "light", { renderer: "svg" }), s.setOption({ ...t.options }, !0), (r = t.events) != null && r.click && s.on("click", t.events.click); const n = le(() => { s.resize({ animation: { duration: 300 } }) }, 250); let p = new ResizeObserver(n); setTimeout(() => p.observe(a.value), 500), ie(() => p.unobserve(a.value)) }), j(() => t.options, n => { s && s.setOption(n, !0) }, { deep: !0 }), (n, p) => (c(), g(N, null, [P(_("div", { ref_key: "chartDiv", ref: a, class: "h-full w-full min-w-[300px] md:min-w-[400px] min-h-[300px] px-4 py-2" }, null, 512), [[U, !n.error]]), P(_("div", { class: "flex h-full w-full items-center justify-center text-center text-red-500" }, " Error: " + Y(n.error), 513), [[U, n.error]])], 64)) } }), Be = B({ __name: "AxisChart", props: { config: {} }, setup(e) { const t = e, s = C(""), a = F(() => { try { return Oe(t.config) } catch (n) { return s.value = n.message, {} } }); return (n, p) => (c(), L(K, { options: a.value, error: s.value }, null, 8, ["options", "error"])) } }), ze = { class: "flex w-full flex-col" }, Ne = { class: "truncate text-sm font-medium" }, Fe = { class: "flex-1 flex-shrink-0 truncate text-[24px] font-semibold leading-10" }, Xe = { class: "" }, Ee = B({ __name: "NumberChart", props: { config: {} }, setup(e) { return C(""), (t, s) => (c(), g("div", { class: H(["flex max-h-[140px] items-center gap-2 overflow-hidden bg-white px-6 pt-5", t.config.delta ? "pb-6" : "pb-3"]) }, [_("div", ze, [_("span", Ne, Y(t.config.title), 1), _("div", Fe, Y(t.config.prefix) + Y(v(D)(t.config.value, 1, !0)) + Y(t.config.suffix), 1), t.config.delta ? (c(), g("div", { key: 0, class: H(["flex items-center gap-0.5 text-xs font-medium", [t.config.negativeIsBetter ? t.config.delta >= 0 ? "text-red-500" : "text-green-500" : t.config.delta >= 0 ? "text-green-500" : "text-red-500"]]) }, [_("span", Xe, Y(t.config.delta >= 0 ? "↑" : "↓"), 1), _("span", null, Y(t.config.deltaPrefix) + Y(v(D)(t.config.delta, 1, !0)) + Y(t.config.deltaSuffix), 1)], 2)) : O("", !0)])], 2)) } }); function Ge(e) {
  let t = e.data || []; t = t.sort((o, i) => { const l = o[e.valueColumn], w = i[e.valueColumn]; return l === w ? 0 : l > w ? -1 : 1 }); const s = t.map(o => o[e.categoryColumn]), a = t.map(o => o[e.valueColumn]), n = a.reduce((o, i) => isNaN(i) ? o : o + i, 0); let p = ["40%", "70%"], r = ["50%", "48%"]; e.subtitle && (p = ["40%", "70%"], r = ["50%", "50%"]), e.showInlineLabels && (r = ["50%", "50%"]); let b = "horizontal", y = 0, x = "center", m = [0, 10, 10, 10]; return {
    animation: !0, animationDuration: 700, color: e.colors, textStyle: { fontFamily: ["InterVar", "sans-serif"] }, title: J(e.title, e.subtitle), dataset: { source: [[e.categoryColumn, e.valueColumn], ...t.map(o => [o[e.categoryColumn], o[e.valueColumn]])] }, series: [{ type: "pie", name: e.categoryColumn, center: r, radius: p, labelLine: { show: e.showInlineLabels, lineStyle: { width: 2 }, length: 10, length2: 20, smooth: !0 }, label: { show: e.showInlineLabels, formatter: ({ value: o, name: i }) => { const l = n > 0 ? o[1] / n * 100 : 0; return `${i} (${l.toFixed(0)}%)` } }, emphasis: { scaleSize: 5 } }], legend: e.showInlineLabels ? null : { left: x, bottom: y, padding: m, orient: b, show: !0, type: "scroll", itemGap: 12, formatter: function (o) { const i = s.indexOf(o), l = n > 0 ? a[i] / n * 100 : 0; return `${o} (${l.toFixed(0)}%)` }, textStyle: { padding: [0, 0, 0, -5], color: "#000" }, icon: "circle", pageIcons: { horizontal: ["M 17 3 h 2 c 0.386 0 0.738 0.223 0.904 0.572 s 0.115 0.762 -0.13 1.062 L 11.292 15 l 8.482 10.367 c 0.245 0.299 0.295 0.712 0.13 1.062 S 19.386 27 19 27 h -2 c -0.3 0 -0.584 -0.135 -0.774 -0.367 l -9 -11 c -0.301 -0.369 -0.301 -0.898 0 -1.267 l 9 -11 C 16.416 3.135 16.7 3 17 3 Z", "M 12 27 h -2 c -0.386 0 -0.738 -0.223 -0.904 -0.572 s -0.115 -0.762 0.13 -1.062 L 17.708 15 L 9.226 4.633 c -0.245 -0.299 -0.295 -0.712 -0.13 -1.062 S 9.614 3 10 3 h 2 c 0.3 0 0.584 0.135 0.774 0.367 l 9 11 c 0.301 0.369 0.301 0.898 0 1.267 l -9 11 C 12.584 26.865 12.3 27 12 27 Z"] }, pageIconColor: "#64748B", pageInactiveColor: "#C0CCDA", pageIconSize: 10, pageTextStyle: { color: "#64748B" }, animationDurationUpdate: 300 }, tooltip: {
      trigger: "item", confine: !0, appendToBody: !1, formatter: function (o) {
        const i = o, l = i.value[1], w = n > 0 ? l / n * 100 : 0, h = isNaN(l) ? l : D(l, 1, !0), T = w.toFixed(0); return `
          <div class="flex items-center justify-between gap-5">
            <div>${i.name}</div>
            <div class="font-bold">
              ${h} (${T}%)
            </div>
          </div>
        `}
    }
  }
} const Ve = B({ __name: "DonutChart", props: { config: {} }, setup(e) { const t = e, s = C(""), a = F(() => { try { return Ge(t.config) } catch (n) { return s.value = n.message, {} } }); return (n, p) => (c(), L(K, { options: a.value, error: s.value }, null, 8, ["options", "error"])) } }), je = { class: "lucide lucide-calendar", xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", "stroke-width": "1.5", "stroke-linecap": "round", "stroke-linejoin": "round" }; function Pe(e, t) { return c(), g("svg", je, t[0] || (t[0] = [_("path", { d: "M8 2v4" }, null, -1), _("path", { d: "M16 2v4" }, null, -1), _("rect", { width: "18", height: "18", x: "3", y: "4", rx: "2" }, null, -1), _("path", { d: "M3 10h18" }, null, -1)])) } const Ue = ue({ name: "lucide-calendar", render: Pe }), He = { class: "flex flex-col" }, Re = { class: "p-5 w-full overflow-y-scroll" }, We = { class: "mb-4 flex items-center gap-4 overflow-x-auto" }, Ze = { key: 0, class: "transition-all animate-fade-in duration-300" }, qe = { key: 0, class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4" }, Qe = { key: 1, class: "grid grid-cols-1 lg:grid-cols-2 gap-4 mt-4" }, Je = { key: 2, class: "grid grid-cols-1 md:grid-cols-2 gap-4 w-full mt-4" }, Ke = { key: 1, class: "flex items-center justify-center h-[240px] gap-2 rounded transition-all animate-fade-in" }, et = B({ __name: "Dashboard", setup(e) { const { isManager: t, userId: s } = de(), a = ce({ period: i(), agent: null, team: null }), n = ["#318AD8", "#F683AE", "#48BB74", "#F56B6B", "#FACF7A", "#44427B", "#5FD8C4", "#F8814F", "#15CCEF", "#A6B1B9"], p = z({ url: "terrasuitehelpdesk.api.dashboard.get_dashboard_data", cache: ["Analytics", "NumberCards"], params: { dashboard_type: "number_card", filters: a } }), r = z({ url: "terrasuitehelpdesk.api.dashboard.get_dashboard_data", cache: ["Analytics", "MasterCharts"], params: { dashboard_type: "master", filters: a } }), b = z({ url: "terrasuitehelpdesk.api.dashboard.get_dashboard_data", cache: ["Analytics", "TrendCharts"], params: { dashboard_type: "trend", filters: a } }), y = C(null), x = z({ url: "terrasuitehelpdesk.helpdesk.doctype.hd_team.hd_team.get_team_members", cache: ["Analytics", "TeamMembers"], params: { team: a.team }, onSuccess: d => { y.value = { name: ["in", d] } } }); j(() => a.team, d => { a.agent = null, d && (x.update({ params: { team: d } }), x.reload()), d || (y.value = null) }); const m = F(() => p.loading || r.loading || b.loading); function o(d) { if (d.colors = n, d.type === "axis") return W(Be, { config: d }); if (d.type === "pie") return W(Ve, { config: d }) } function i(d = 30) { const u = new Date, A = new Date(u); return A.setDate(u.getDate() - d), `${V(A).format("YYYY-MM-DD")},${V(u).format("YYYY-MM-DD")}` } const l = C(!1), w = C(null), h = C("Last 30 Days"), T = F(() => [{ group: "Presets", hideLabel: !0, items: [{ label: "Today", onClick: () => { h.value = "Today", a.period = i(0) } }, { label: "Last 7 Days", onClick: () => { h.value = "Last 7 Days", a.period = i(7) } }, { label: "Last 30 Days", onClick: () => { h.value = "Last 30 Days", a.period = i(30) } }, { label: "Last 60 Days", onClick: () => { h.value = "Last 60 Days", a.period = i(60) } }, { label: "Last 90 Days", onClick: () => { h.value = "Last 90 Days", a.period = i(90) } }] }, { label: "Custom Range", onClick: () => { l.value = !0, setTimeout(() => { var d; (d = w.value) == null || d.open() }, 0), h.value = "Custom Range", a.period = null } }]); function ee(d) { if (!d) return a.period = i(), h.value = "Last 30 Days", h.value; let [u, A] = d.split(","); return `${X(u)} to ${X(A)}` } function X(d) { const u = new Date(d); return u.toLocaleDateString("en-US", { month: "short", day: "numeric", year: u.getFullYear() === new Date().getFullYear() ? void 0 : "numeric" }) } return j(() => a, d => { var A, I; if (l.value) return; const u = { from_date: ((A = d.period) == null ? void 0 : A.split(",")[0]) || null, to_date: ((I = d.period) == null ? void 0 : I.split(",")[1]) || null, agent: d.agent || null, team: d.team || null }; p.update({ params: { dashboard_type: "number_card", filters: u } }), p.reload(), r.update({ params: { dashboard_type: "master", filters: u } }), r.reload(), b.update({ params: { dashboard_type: "trend", filters: u } }), b.reload() }, { deep: !0 }), Q(() => { if (!t) { a.agent = s; return } p.reload(), r.reload(), b.reload() }), pe(() => ({ title: "Dashboard" })), (d, u) => { const A = ye, I = Ue, te = re, ae = oe, se = me("Button"); return c(), g("div", He, [S(A, null, { "left-header": M(() => u[6] || (u[6] = [_("div", { class: "text-lg font-medium text-gray-900" }, "Dashboard", -1)])), "right-header": M(() => u[7] || (u[7] = [])), _: 1 }), _("div", Re, [_("div", We, [l.value ? (c(), L(v(ve), { key: 1, class: "!w-48", ref_key: "datePickerRef", ref: w, modelValue: a.period, "onUpdate:modelValue": [u[2] || (u[2] = f => a.period = f), u[3] || (u[3] = f => { l.value = !1, h.value = ee(f) })], variant: "outline", placeholder: "Period", formatter: X }, { prefix: M(() => [S(I, { class: "size-4 text-ink-gray-5 mr-2" })]), _: 1 }, 8, ["modelValue"])) : (c(), L(v(xe), { key: 0, options: T.value, class: "form-control !w-48", modelValue: h.value, "onUpdate:modelValue": u[0] || (u[0] = f => h.value = f), placeholder: "Select Range", onChange: u[1] || (u[1] = f => a.period = h.value), button: { label: h.value, class: "!w-full justify-start [&>span]:mr-auto [&>svg]:text-ink-gray-5 ", variant: "ghost", iconRight: "chevron-down", iconLeft: "calendar" } }, { prefix: M(() => [S(I, { class: "size-4 text-ink-gray-5 mr-2" })]), _: 1 }, 8, ["options", "modelValue", "button"])), v(t) ? (c(), L(v(Z), { key: 2, class: "form-control w-48", doctype: "HD Team", placeholder: "Team", modelValue: a.team, "onUpdate:modelValue": u[4] || (u[4] = f => a.team = f), "page-length": 5, "hide-me": !0 }, { prefix: M(() => [S(te, { class: "size-4 text-ink-gray-5 mr-2" })]), _: 1 }, 8, ["modelValue"])) : O("", !0), v(t) ? (c(), L(v(Z), { key: 3, class: "form-control w-48", doctype: "HD Agent", placeholder: "Agent", modelValue: a.agent, "onUpdate:modelValue": u[5] || (u[5] = f => a.agent = f), "page-length": 5, filters: y.value, "hide-me": !0 }, { prefix: M(() => [S(ae, { class: "size-4 text-ink-gray-5 mr-2" })]), _: 1 }, 8, ["modelValue", "filters"])) : O("", !0)]), m.value ? (c(), g("div", Ke, [S(se, { loading: !0, size: "2xl", variant: "ghost" })])) : (c(), g("div", Ze, [v(p).loading ? O("", !0) : (c(), g("div", qe, [(c(!0), g(N, null, E(v(p).data, (f, $) => (c(), L(v(he), { text: f.tooltip }, { default: M(() => [(c(), L(v(Ee), { key: $, class: "border rounded-md", config: f }, null, 8, ["config"]))]), _: 2 }, 1032, ["text"]))), 256))])), v(b).loading ? O("", !0) : (c(), g("div", Qe, [(c(!0), g(N, null, E(v(b).data, (f, $) => (c(), g("div", { class: "border rounded-md min-h-80", key: $ }, [(c(), L(R(o(f))))]))), 128))])), v(r).loading ? O("", !0) : (c(), g("div", Je, [(c(!0), g(N, null, E(v(r).data, (f, $) => (c(), g("div", { class: "border rounded-md", key: $ }, [(c(), L(R(o(f))))]))), 128))]))]))])]) } } }); const ut = fe(et, [["__scopeId", "data-v-c2bf4b4d"]]); export { ut as default };
//# sourceMappingURL=Dashboard-42c2d101.js.map
