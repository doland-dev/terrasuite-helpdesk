{"version":3,"file":"TicketCustomerTemplateFields.vue_vue_type_script_setup_true_lang-980b5ad0.js","sources":["../../../../desk/src/pages/ticket/TicketCustomerTemplateFields.vue"],"sourcesContent":["<template>\n  <div class=\"grid grid-cols-1 gap-4 border-b px-5 py-2.5 sm:grid-cols-3\">\n    <div class=\"space-y-1.5\">\n      <span class=\"block text-sm text-gray-700\"> Status </span>\n      <span class=\"block break-words text-base font-medium text-gray-900\">\n        {{ transformStatus(ticket.data.status) }}\n      </span>\n    </div>\n    <div class=\"space-y-1.5\">\n      <span class=\"block text-sm text-gray-700\"> Priority </span>\n      <span class=\"block break-words text-base font-medium text-gray-900\">\n        {{ ticket.data.priority }}\n      </span>\n    </div>\n    <div v-for=\"data in slaData\" :key=\"data.label\" class=\"space-y-1.5\">\n      <Tooltip :text=\"dayjs(data.value).long()\">\n        <span class=\"block text-sm text-gray-700\">{{ data.title }}</span>\n      </Tooltip>\n      <span class=\"block break-words text-base font-medium text-gray-900\">\n        <Badge\n          v-if=\"data.showSla\"\n          :label=\"data.label\"\n          :theme=\"data.theme\"\n          variant=\"outline\"\n        />\n        <span v-else>\n          {{ dayjs.tz(data.value).fromNow() }}\n        </span>\n      </span>\n    </div>\n    <div\n      v-for=\"field in customFields\"\n      :key=\"field.fieldname\"\n      class=\"space-y-1.5\"\n    >\n      <span class=\"block text-sm text-gray-700\">\n        {{ field.label }}\n      </span>\n      <span class=\"block break-words text-base font-medium text-gray-900\">\n        {{ ticket.data[field.fieldname] }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, computed } from \"vue\";\nimport { ITicket } from \"./symbols\";\nimport { dayjs } from \"@/dayjs\";\nimport { Field } from \"@/types\";\n\nconst ticket = inject(ITicket);\n\nconst slaData = computed(() => {\n  const responseSla =\n    ticket.data.first_responded_on &&\n    dayjs(ticket.data.first_responded_on).isBefore(ticket.data.response_by)\n      ? \"Fulfilled\"\n      : \"Failed\";\n\n  //TODO: no resolution date for unclassified tickets, configurable?\n  if (ticket.data.priority === \"Unclassified\") {\n    return [\n      {\n        title: \"Expected First Response\",\n        showSla: ticket.data.first_responded_on,\n        label: responseSla,\n        theme: responseSla === \"Fulfilled\" ? \"green\" : \"red\",\n        value: ticket.data.response_by,\n      },\n    ];\n  }\n\n  const resolutionSla =\n    ticket.data.resolution_date &&\n    dayjs(ticket.data.resolution_date).isBefore(ticket.data.resolution_by)\n      ? \"Fulfilled\"\n      : \"Failed\";\n\n  return [\n    {\n      title: \"Expected First Response\",\n      showSla: ticket.data.first_responded_on,\n      label: responseSla,\n      theme: responseSla === \"Fulfilled\" ? \"green\" : \"red\",\n      value: ticket.data.response_by,\n    },\n    {\n      title: \"Expected Resolution\",\n      showSla: ticket.data.resolution_date,\n      label: resolutionSla,\n      theme: resolutionSla === \"Fulfilled\" ? \"green\" : \"red\",\n      value: ticket.data.resolution_by,\n    },\n  ];\n});\n\nconst customFields = computed(() => {\n  const _custom_fields = ticket.data.template.fields\n    .filter((field: Field) => !field.hide_from_customer)\n    .filter(\n      (f: Field) => [\"subject\", \"team\", \"priority\"].indexOf(f.fieldname) === -1\n    );\n  return _custom_fields;\n});\n\nfunction transformStatus(status: string) {\n  switch (status) {\n    case \"Replied\":\n      return \"Awaiting reply\";\n    default:\n      return status;\n  }\n}\n</script>\n"],"names":["ticket","inject","ITicket","slaData","computed","responseSla","dayjs","resolutionSla","customFields","field","f","transformStatus","status","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_toDisplayString","_unref","_hoisted_4","_hoisted_5","_Fragment","_renderList","data","_createVNode","_component_Tooltip","_hoisted_6","_hoisted_7","_createBlock","_component_Badge","_hoisted_8","_hoisted_9","_hoisted_10"],"mappings":"0tBAmDM,MAAAA,EAASC,EAAOC,CAAO,EAEvBC,EAAUC,EAAS,IAAM,CAC7B,MAAMC,EACJL,EAAO,KAAK,oBACZM,EAAMN,EAAO,KAAK,kBAAkB,EAAE,SAASA,EAAO,KAAK,WAAW,EAClE,YACA,SAGF,GAAAA,EAAO,KAAK,WAAa,eACpB,MAAA,CACL,CACE,MAAO,0BACP,QAASA,EAAO,KAAK,mBACrB,MAAOK,EACP,MAAOA,IAAgB,YAAc,QAAU,MAC/C,MAAOL,EAAO,KAAK,WACrB,CAAA,EAIJ,MAAMO,EACJP,EAAO,KAAK,iBACZM,EAAMN,EAAO,KAAK,eAAe,EAAE,SAASA,EAAO,KAAK,aAAa,EACjE,YACA,SAEC,MAAA,CACL,CACE,MAAO,0BACP,QAASA,EAAO,KAAK,mBACrB,MAAOK,EACP,MAAOA,IAAgB,YAAc,QAAU,MAC/C,MAAOL,EAAO,KAAK,WACrB,EACA,CACE,MAAO,sBACP,QAASA,EAAO,KAAK,gBACrB,MAAOO,EACP,MAAOA,IAAkB,YAAc,QAAU,MACjD,MAAOP,EAAO,KAAK,aACrB,CAAA,CACF,CACD,EAEKQ,EAAeJ,EAAS,IACLJ,EAAO,KAAK,SAAS,OACzC,OAAQS,GAAiB,CAACA,EAAM,kBAAkB,EAClD,OACEC,GAAa,CAAC,UAAW,OAAQ,UAAU,EAAE,QAAQA,EAAE,SAAS,IAAM,EAAA,CAG5E,EAED,SAASC,EAAgBC,EAAgB,CACvC,OAAQA,EAAQ,CACd,IAAK,UACI,MAAA,iBACT,QACS,OAAAA,CACX,CACF,iDAhHE,OAAAC,EAAA,EAAAC,EAyCM,MAzCNC,EAyCM,CAxCJC,EAKM,MALNC,EAKM,CAJJC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAF,EAAyD,OAAnD,CAAA,MAAM,+BAA8B,WAAQ,EAAA,GAClDA,EAEO,OAFPG,EACKC,EAAAT,EAAgBU,EAAMrB,CAAA,EAAC,KAAK,MAAM,CAAA,EAAA,CAAA,CAAA,GAGzCgB,EAKM,MALNM,EAKM,CAJJJ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAF,EAA2D,OAArD,CAAA,MAAM,+BAA8B,aAAU,EAAA,GACpDA,EAEO,OAFPO,EAEOH,EADFC,KAAO,KAAK,QAAQ,EAAA,CAAA,CAAA,UAG3BP,EAeMU,EAAA,KAAAC,EAfctB,EAAO,MAAfuB,QAAZZ,EAeM,MAAA,CAfwB,IAAKY,EAAK,MAAO,MAAM,aAAA,GACnDC,EAEUC,EAAA,CAFA,KAAMP,EAAKf,CAAA,EAACoB,EAAK,KAAK,EAAE,KAAI,CAAA,aACpC,IAAiE,CAAjEV,EAAiE,OAAjEa,EAA6CT,EAAAM,EAAK,KAAK,EAAA,CAAA,CAAA,uBAEzDV,EAUO,OAVPc,EAUO,CARGJ,EAAK,aADbK,EAKEC,EAAA,OAHC,MAAON,EAAK,MACZ,MAAOA,EAAK,MACb,QAAQ,SAAA,kCAEVZ,EAEO,OAAAmB,EAAAb,EADFC,KAAM,GAAGK,EAAK,KAAK,EAAE,QAAA,CAAO,EAAA,CAAA,EAAA,oBAIrCZ,EAWMU,EAAA,KAAAC,EAVYjB,EAAY,MAArBC,QADTK,EAWM,MAAA,CATH,IAAKL,EAAM,UACZ,MAAM,aAAA,GAENO,EAEO,OAFPkB,EACKd,EAAAX,EAAM,KAAK,EAAA,CAAA,EAEhBO,EAEO,OAFPmB,EACKf,EAAAC,EAAArB,CAAA,EAAO,KAAKS,EAAM,SAAS,CAAA,EAAA,CAAA,CAAA"}