{"version":3,"file":"TicketAgent-dedfc1d3.js","sources":["../../../../desk/src/components/Icon.vue","../../../../desk/src/components/ticket/TicketMergeModal.vue","../../../../desk/src/components/ticket/TicketAgentSidebar.vue","../../../../desk/src/pages/ticket/TicketAgent.vue"],"sourcesContent":["<template>\n  <div v-if=\"isEmoji(icon)\" v-bind=\"$attrs\">\n    {{ icon }}\n  </div>\n  <FeatherIcon\n    v-else-if=\"typeof icon == 'string'\"\n    :name=\"icon\"\n    v-bind=\"$attrs\"\n  />\n  <component v-else :is=\"icon\" v-bind=\"$attrs\" />\n</template>\n<script setup>\nimport { isEmoji } from \"@/utils\";\n\nconst props = defineProps({\n  icon: {\n    type: [String, Object],\n    required: true,\n  },\n});\n</script>\n","<template>\n  <Dialog\n    :options=\"{ title: `Merge with another ticket` }\"\n    v-model=\"showDialog\"\n  >\n    <template #body-content>\n      <div class=\"flex flex-col gap-4\">\n        <p class=\"text-p-base text-ink-gray-8\">\n          All comments and emails of the ticket\n          <span class=\"whitespace-nowrap font-semibold\"\n            >#{{ ticket.name }}</span\n          >\n          will be moved to the selected ticket.\n        </p>\n        <Link\n          class=\"form-control\"\n          doctype=\"HD Ticket\"\n          placeholder=\"Select Ticket\"\n          :filters=\"getDefaultFilters()\"\n          label=\"Ticket\"\n          :page-length=\"10\"\n          :value=\"targetTicket\"\n          :show-description=\"true\"\n          @change=\"targetTicket = String($event)\"\n        />\n        <FormControl\n          v-if=\"targetTicket\"\n          label=\"Ticket Subject\"\n          type=\"text\"\n          v-model=\"subject\"\n          :disabled=\"true\"\n        />\n        <!-- banner -->\n        <div\n          class=\"flex items-center gap-2 rounded-md p-2 ring-1 ring-gray-200\"\n        >\n          <TriangleAlert\n            class=\"h-6 w-5 w-min-5 w-max-5 min-h-5 max-w-5 text-yellow-500\"\n          />\n\n          <div class=\"text-wrap text-sm text-gray-700\">\n            This action is irreversible.\n          </div>\n        </div>\n      </div>\n    </template>\n    <template #actions>\n      <Button\n        class=\"w-full\"\n        variant=\"solid\"\n        :label=\"\n          targetTicket ? `Merge with ticket #${targetTicket} ` : 'Select Ticket'\n        \"\n        :loading=\"mergeTicket.loading\"\n        :icon-left=\"targetTicket && LucideMerge\"\n        @click=\"handleTicketMerge\"\n      />\n    </template>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { Ticket } from \"@/types\";\nimport { Dialog, createListResource, createResource, toast } from \"frappe-ui\";\nimport { ref, watch } from \"vue\";\nimport LucideMerge from \"~icons/lucide/merge\";\nimport TriangleAlert from \"~icons/lucide/triangle-alert\";\n// interface P\ninterface Props {\n  ticket: Ticket;\n}\n\ninterface E {\n  (event: \"update\"): void;\n  //   (event: \"rowClick\", row: any): void;\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<E>();\nconst showDialog = defineModel<boolean>();\n\ninterface Filter {\n  status: [string, string[] | string];\n  is_merged: number;\n  name: string[];\n  customer?: any;\n  raised_by?: [string, string[] | string];\n}\n\nfunction getDefaultFilters() {\n  const filters: Filter = {\n    status: [\"in\", [\"Open\", \"Replied\"]],\n    is_merged: 0,\n    name: [\"!=\", props.ticket.name],\n  };\n  // if part of an organization show all tickets of the organization\n  if (props.ticket.customer) {\n    filters.customer = props.ticket.customer;\n  }\n  //  show all tickets of the person who raised the ticket\n  if (props.ticket.raised_by) {\n    filters.raised_by = [\"like\", `%${props.ticket.raised_by}%`];\n  }\n  return filters;\n}\n\nconst targetTicket = ref(null);\nconst subject = ref(null);\n\nconst mergeTicket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.merge_ticket\",\n  makeParams({ source, target }) {\n    return {\n      source,\n      target,\n    };\n  },\n  validate({ source, target }) {\n    if (!source) throw { message: \"Category is required\" };\n    if (!target) throw { message: \"Ticket to merged with is required\" };\n  },\n  onSuccess: () => {\n    toast.success(\"Ticket merged successfully\");\n    emit(\"update\");\n\n    showDialog.value = false;\n    // open the target Ticket\n    window.open(\n      window.location.origin + \"/helpdesk/tickets/\" + targetTicket.value,\n      \"_blank\"\n    );\n    targetTicket.value = null;\n  },\n});\n\nconst getTicketSubject = createListResource({\n  doctype: \"HD Ticket\",\n  filters: {\n    name: [\"=\", targetTicket],\n  },\n  fields: [\"subject\"],\n  onSuccess: (data: any) => {\n    if (data.length > 0) {\n      subject.value = data[0].subject;\n    }\n  },\n});\n\nwatch(\n  () => targetTicket.value,\n  (newValue) => {\n    if (newValue) {\n      getTicketSubject.update({\n        filters: {\n          name: [\"=\", newValue],\n        },\n      });\n      getTicketSubject.reload();\n    }\n  }\n);\n\nfunction handleTicketMerge() {\n  mergeTicket.submit({\n    source: props.ticket.name,\n    target: targetTicket.value,\n  });\n}\n</script>\n\n<style scoped></style>\n","<template>\n  <div class=\"flex !w-[382px] flex-col justify-between border-l\">\n    <div\n      class=\"flex h-10.5 items-center border-b px-5 py-2.5 text-lg font-medium text-ink-gray-9 justify-between\"\n    >\n      <span\n        class=\"cursor-copy text-lg font-semibold\"\n        @click=\"\n          copyToClipboard(ticket.name, `'${ticket.name}' copied to clipboard`)\n        \"\n        >#{{ ticket.name }}\n      </span>\n      <Dropdown\n        v-if=\"showMergeOption\"\n        :options=\"[\n          {\n            label: 'Merge Ticket',\n            onClick: () => (showMergeModal = true),\n            icon: LucideMerge,\n            condition: () => !ticket.is_merged,\n          },\n        ]\"\n      >\n        <Button icon=\"more-horizontal\" class=\"text-gray-600\" variant=\"ghost\" />\n      </Dropdown>\n    </div>\n    <TicketAgentContact\n      :contact=\"ticket.contact\"\n      @email:open=\"(e) => emit('email:open', e)\"\n    />\n    <!-- feedback component -->\n    <TicketFeedback\n      v-if=\"ticket.feedback_rating\"\n      class=\"py-3 !px-6 !gap-3 text-base text-gray-600\"\n      :ticket=\"ticket\"\n    />\n    <!-- ticket details -->\n    <TicketAgentDetails :ticket=\"ticket\" />\n    <!-- fields -->\n    <TicketAgentFields :ticket=\"ticket\" @update=\"update\" />\n    <TicketMergeModal\n      :ticket=\"ticket\"\n      v-if=\"showMergeModal\"\n      v-model=\"showMergeModal\"\n      @update=\"emit('reload')\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Ticket } from \"@/types\";\nimport { copyToClipboard } from \"@/utils\";\nimport { computed, ref } from \"vue\";\nimport LucideMerge from \"~icons/lucide/merge\";\nimport TicketAgentContact from \"./TicketAgentContact.vue\";\nimport TicketAgentDetails from \"./TicketAgentDetails.vue\";\nimport TicketAgentFields from \"./TicketAgentFields.vue\";\nimport TicketMergeModal from \"./TicketMergeModal.vue\";\n\ninterface Props {\n  ticket: Ticket;\n}\n\nconst props = defineProps<Props>();\n\nconst emit = defineEmits([\"update\", \"email:open\", \"reload\"]);\n\nfunction update(val = null) {\n  if (val.value && typeof val.value === \"object\") {\n    val.value = val.value.target?.value || null;\n  }\n  emit(\"update\", val);\n}\n\nconst showMergeModal = ref(false);\n\nconst showMergeOption = computed(() => {\n  return (\n    !props.ticket.is_merged && [\"Open\", \"Replied\"].includes(props.ticket.status)\n  );\n});\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <LayoutHeader v-if=\"ticket.data\">\n      <template #left-header>\n        <Breadcrumbs :items=\"breadcrumbs\" class=\"breadcrumbs\">\n          <template #prefix=\"{ item }\">\n            <Icon\n              v-if=\"item.icon\"\n              :icon=\"item.icon\"\n              class=\"mr-1 h-4 flex items-center justify-center self-center\"\n            />\n          </template>\n        </Breadcrumbs>\n      </template>\n      <template #right-header>\n        <CustomActions\n          v-if=\"ticket.data._customActions\"\n          :actions=\"ticket.data._customActions\"\n        />\n        <div v-if=\"ticket.data.assignees?.length\">\n          <component :is=\"ticket.data.assignees.length == 1 ? 'Button' : 'div'\">\n            <MultipleAvatar\n              :avatars=\"ticket.data.assignees\"\n              @click=\"showAssignmentModal = true\"\n            />\n          </component>\n        </div>\n        <button\n          v-else\n          class=\"rounded bg-gray-100 px-2 py-1.5 text-base text-gray-800\"\n          @click=\"showAssignmentModal = true\"\n        >\n          Assign\n        </button>\n        <Dropdown :options=\"dropdownOptions\">\n          <template #default=\"{ open }\">\n            <Button :label=\"ticket.data.status\">\n              <template #prefix>\n                <IndicatorIcon\n                  :class=\"ticketStatusStore.textColorMap[ticket.data.status]\"\n                />\n              </template>\n              <template #suffix>\n                <FeatherIcon\n                  :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                  class=\"h-4\"\n                />\n              </template>\n            </Button>\n          </template>\n        </Dropdown>\n      </template>\n    </LayoutHeader>\n    <div v-if=\"ticket.data\" class=\"flex h-full overflow-hidden\">\n      <div class=\"flex flex-1 flex-col max-w-[calc(100%-382px)]\">\n        <!-- ticket activities -->\n        <div class=\"overflow-y-hidden flex flex-1 !h-full flex-col\">\n          <Tabs v-model=\"tabIndex\" :tabs=\"tabs\">\n            <TabList />\n            <TabPanel v-slot=\"{ tab }\" class=\"h-full\">\n              <TicketAgentActivities\n                ref=\"ticketAgentActivitiesRef\"\n                :activities=\"filterActivities(tab.name)\"\n                :title=\"tab.label\"\n                :ticket-status=\"ticket.data?.status\"\n                @update=\"\n                  () => {\n                    ticket.reload();\n                  }\n                \"\n                @email:reply=\"\n                  (e) => {\n                    communicationAreaRef.replyToEmail(e);\n                  }\n                \"\n              />\n            </TabPanel>\n          </Tabs>\n        </div>\n        <CommunicationArea\n          ref=\"communicationAreaRef\"\n          v-model=\"ticket.data\"\n          :to-emails=\"[ticket.data?.raised_by]\"\n          :cc-emails=\"[]\"\n          :bcc-emails=\"[]\"\n          :key=\"ticket.data?.name\"\n          @update=\"\n            () => {\n              ticket.reload();\n              ticketAgentActivitiesRef.scrollToLatestActivity();\n            }\n          \"\n        />\n      </div>\n      <TicketAgentSidebar\n        :ticket=\"ticket.data\"\n        @update=\"({ field, value }) => updateTicket(field, value)\"\n        @email:open=\"(e) => communicationAreaRef.toggleEmailBox()\"\n        @reload=\"ticket.reload()\"\n      />\n    </div>\n    <AssignmentModal\n      v-if=\"ticket.data\"\n      v-model=\"showAssignmentModal\"\n      :assignees=\"ticket.data.assignees\"\n      :docname=\"ticketId\"\n      doctype=\"HD Ticket\"\n      @update=\"\n        () => {\n          ticket.reload();\n        }\n      \"\n    />\n    <!-- Rename Subject Dialog -->\n    <Dialog v-model=\"showSubjectDialog\" :options=\"{ title: 'Rename Subject' }\">\n      <template #body-content>\n        <div class=\"flex flex-col flex-1 gap-3\">\n          <FormControl\n            v-model=\"renameSubject\"\n            type=\"textarea\"\n            size=\"sm\"\n            variant=\"subtle\"\n            :disabled=\"false\"\n          />\n          <Button\n            variant=\"solid\"\n            :loading=\"isLoading\"\n            label=\"Rename\"\n            @click=\"handleRename\"\n          />\n        </div>\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  Breadcrumbs,\n  Dialog,\n  Dropdown,\n  FormControl,\n  TabList,\n  TabPanel,\n  Tabs,\n  call,\n  createResource,\n  toast,\n} from \"frappe-ui\";\nimport { computed, h, onMounted, onUnmounted, provide, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\nimport {\n  AssignmentModal,\n  CommunicationArea,\n  Icon,\n  LayoutHeader,\n  MultipleAvatar,\n} from \"@/components\";\nimport {\n  ActivityIcon,\n  CommentIcon,\n  EmailIcon,\n  IndicatorIcon,\n} from \"@/components/icons\";\nimport { TicketAgentActivities, TicketAgentSidebar } from \"@/components/ticket\";\nimport { setupCustomizations } from \"@/composables/formCustomisation\";\nimport { useView } from \"@/composables/useView\";\nimport { socket } from \"@/socket\";\nimport { globalStore } from \"@/stores/globalStore\";\nimport { useTicketStatusStore } from \"@/stores/ticketStatus\";\nimport { useUserStore } from \"@/stores/user\";\nimport { TabObject, TicketTab, View } from \"@/types\";\nimport { getIcon } from \"@/utils\";\nimport { ComputedRef } from \"vue\";\nimport { showAssignmentModal } from \"./modalStates\";\nconst route = useRoute();\nconst router = useRouter();\n\nconst ticketStatusStore = useTicketStatusStore();\nconst { getUser } = useUserStore();\nconst { $dialog } = globalStore();\nconst ticketAgentActivitiesRef = ref(null);\nconst communicationAreaRef = ref(null);\nconst renameSubject = ref(\"\");\nconst isLoading = ref(false);\n\nconst props = defineProps({\n  ticketId: {\n    type: String,\n    required: true,\n  },\n});\nwatch(\n  () => props.ticketId,\n  () => {\n    ticket.reload();\n  }\n);\n\nconst { findView } = useView(\"HD Ticket\");\n\nprovide(\"communicationArea\", communicationAreaRef);\n\nconst showSubjectDialog = ref(false);\n\nconst ticket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.get_one\",\n  auto: true,\n  makeParams: () => ({\n    name: props.ticketId,\n  }),\n  transform: (data) => {\n    if (data._assign) {\n      data.assignees = JSON.parse(data._assign).map((assignee) => {\n        return {\n          name: assignee,\n          image: getUser(assignee).user_image,\n          label: getUser(assignee).full_name,\n        };\n      });\n    }\n    renameSubject.value = data.subject;\n  },\n  onSuccess: (data) => {\n    document.title = data.subject;\n    setupCustomizations(ticket, {\n      doc: data,\n      call,\n      router,\n      toast,\n      $dialog,\n      updateField,\n      createToast: toast.create,\n    });\n  },\n});\nfunction updateField(name: string, value: string, callback = () => {}) {\n  updateTicket(name, value);\n  callback();\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: \"Tickets\", route: { name: \"TicketsAgent\" } }];\n  if (route.query.view) {\n    const currView: ComputedRef<View> = findView(route.query.view as string);\n    if (currView) {\n      items.push({\n        label: currView.value?.label,\n        icon: getIcon(currView.value?.icon),\n        route: { name: \"TicketsAgent\", query: { view: currView.value?.name } },\n      });\n    }\n  }\n  items.push({\n    label: ticket.data?.subject,\n    onClick: () => {\n      showSubjectDialog.value = true;\n    },\n  });\n  return items;\n});\n\nconst handleRename = () => {\n  if (renameSubject.value === ticket.data?.subject) return;\n  updateTicket(\"subject\", renameSubject.value);\n  showSubjectDialog.value = false;\n};\n\nconst dropdownOptions = computed(() =>\n  ticketStatusStore.options.map((o) => ({\n    label: o,\n    value: o,\n    onClick: () => updateTicket(\"status\", o),\n    icon: () =>\n      h(IndicatorIcon, {\n        class: ticketStatusStore.textColorMap[o],\n      }),\n  }))\n);\n\n// watch(\n//   () => ticket.data,\n//   (val) => {\n//     console.log(\"CUSTOM ACTIONSSS\");\n//     // console.log(val._customActions);\n//   },\n//   { deep: true }\n// );\n\nconst tabIndex = ref(0);\nconst tabs: TabObject[] = [\n  {\n    name: \"activity\",\n    label: \"Activity\",\n    icon: ActivityIcon,\n  },\n  {\n    name: \"email\",\n    label: \"Emails\",\n    icon: EmailIcon,\n  },\n  {\n    name: \"comment\",\n    label: \"Comments\",\n    icon: CommentIcon,\n  },\n];\n\nconst activities = computed(() => {\n  const emailProps = ticket.data.communications.map((email, idx: number) => {\n    return {\n      subject: email.subject,\n      content: email.content,\n      sender: { name: email.user.email, full_name: email.user.name },\n      to: email.recipients,\n      type: \"email\",\n      key: email.creation,\n      cc: email.cc,\n      bcc: email.bcc,\n      creation: email.communication_date || email.creation,\n      attachments: email.attachments,\n      name: email.name,\n      isFirstEmail: idx === 0,\n    };\n  });\n\n  const commentProps = ticket.data.comments.map((comment) => {\n    return {\n      name: comment.name,\n      type: \"comment\",\n      key: comment.creation,\n      commentedBy: comment.commented_by,\n      commenter: comment.user.name,\n      creation: comment.creation,\n      content: comment.content,\n      attachments: comment.attachments,\n    };\n  });\n\n  const historyProps = [...ticket.data.history, ...ticket.data.views].map(\n    (h) => {\n      return {\n        type: \"history\",\n        key: h.creation,\n        content: h.action ? h.action : \"viewed this\",\n        creation: h.creation,\n        user: h.user.name + \" \",\n      };\n    }\n  );\n\n  const sorted = [...emailProps, ...commentProps, ...historyProps].sort(\n    (a, b) => new Date(a.creation) - new Date(b.creation)\n  );\n\n  const data = [];\n  let i = 0;\n\n  while (i < sorted.length) {\n    const currentActivity = sorted[i];\n    if (currentActivity.type === \"history\") {\n      currentActivity.relatedActivities = [currentActivity];\n      for (let j = i + 1; j < sorted.length + 1; j++) {\n        const nextActivity = sorted[j];\n\n        if (nextActivity && nextActivity.user === currentActivity.user) {\n          currentActivity.relatedActivities.push(nextActivity);\n        } else {\n          data.push(currentActivity);\n          i = j - 1;\n          break;\n        }\n      }\n    } else {\n      data.push(currentActivity);\n    }\n    i++;\n  }\n  return data;\n});\n\nfunction filterActivities(eventType: TicketTab) {\n  if (eventType === \"activity\") {\n    return activities.value;\n  }\n  return activities.value.filter((activity) => activity.type === eventType);\n}\nconst isErrorTriggered = ref(false);\nfunction updateTicket(fieldname: string, value: string) {\n  isErrorTriggered.value = false;\n  if (value === ticket.data[fieldname]) return;\n  updateOptimistic(fieldname, value);\n\n  createResource({\n    url: \"frappe.client.set_value\",\n    params: {\n      doctype: \"HD Ticket\",\n      name: props.ticketId,\n      fieldname,\n      value,\n    },\n    debounce: 500,\n    auto: true,\n    onSuccess: () => {\n      isLoading.value = false;\n      isErrorTriggered.value = false;\n      ticket.reload();\n    },\n    onError: (error) => {\n      if (isErrorTriggered.value) return;\n      isErrorTriggered.value = true;\n\n      const text = error.exc_type\n        ? (error.messages || error.message || []).join(\", \")\n        : error.message;\n      toast.error(text);\n\n      ticket.reload();\n    },\n  });\n}\n\nfunction updateOptimistic(fieldname: string, value: string) {\n  ticket.data[fieldname] = value;\n  toast.success(\"Ticket updated\");\n}\n\nonMounted(() => {\n  socket.on(\"helpdesk:ticket-update\", (ticketID) => {\n    if (ticketID === Number(props.ticketId)) {\n      ticket.reload();\n    }\n  });\n});\n\nonUnmounted(() => {\n  document.title = \"Helpdesk\";\n  socket.off(\"helpdesk:ticket-update\");\n});\n</script>\n\n<style>\n.breadcrumbs button {\n  background-color: inherit !important;\n  &:hover,\n  &:focus {\n    background-color: inherit !important;\n  }\n}\n</style>\n"],"names":["_unref","isEmoji","__props","_createElementBlock","_normalizeProps","_mergeProps","$attrs","_toDisplayString","_openBlock","_createBlock","_component_FeatherIcon","_resolveDynamicComponent","props","emit","__emit","showDialog","_useModel","getDefaultFilters","filters","targetTicket","ref","subject","mergeTicket","createResource","source","target","toast","getTicketSubject","createListResource","data","watch","newValue","handleTicketMerge","Dialog","$event","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","ticket","_createVNode","_component_Link","_cache","_component_FormControl","_hoisted_4","TriangleAlert","_component_Button","LucideMerge","update","val","_a","showMergeModal","showMergeOption","computed","copyToClipboard","_component_Dropdown","TicketAgentContact","e","_component_TicketFeedback","TicketAgentDetails","TicketAgentFields","TicketMergeModal","route","useRoute","router","useRouter","ticketStatusStore","useTicketStatusStore","getUser","useUserStore","$dialog","globalStore","ticketAgentActivitiesRef","communicationAreaRef","renameSubject","isLoading","findView","useView","provide","showSubjectDialog","assignee","setupCustomizations","call","updateField","name","value","callback","updateTicket","breadcrumbs","items","currView","getIcon","_b","_c","_d","handleRename","dropdownOptions","h","IndicatorIcon","tabIndex","tabs","ActivityIcon","EmailIcon","CommentIcon","activities","emailProps","email","idx","commentProps","comment","historyProps","sorted","b","i","currentActivity","j","nextActivity","filterActivities","eventType","activity","isErrorTriggered","fieldname","updateOptimistic","error","text","onMounted","socket","ticketID","onUnmounted","LayoutHeader","Breadcrumbs","_withCtx","item","Icon","_component_CustomActions","MultipleAvatar","showAssignmentModal","Dropdown","open","_normalizeClass","_hoisted_5","Tabs","TabList","TabPanel","tab","TicketAgentActivities","CommunicationArea","TicketAgentSidebar","field","AssignmentModal","_hoisted_6","FormControl"],"mappings":"+uDACa,OAAAA,EAAAC,EAAA,EAAQC,EAAI,IAAA,OAAvBC,EAEM,MAAAC,EAAAC,EAAA,CAAA,IAAA,CAAA,EAF4BC,EAAM,MAAA,CAAA,EAAAC,EACnCL,EAAI,IAAA,EAAA,EAAA,UAGWA,EAAI,MAAA,UADxBM,IAAAC,EAIEC,EAJFL,EAIE,OAFC,KAAMH,EAAI,MACHI,EAAM,MAAA,EAAA,KAAA,GAAA,CAAA,MAAA,CAAA,QAEhBG,EAA+CE,EAAxBT,EAAI,IAAA,EAAAE,EAAAC,EAAA,CAAA,IAAA,CAAA,EAAUC,EAAM,MAAA,CAAA,EAAA,KAAA,EAAA,qWCoE7C,MAAMM,EAAQV,EACRW,EAAOC,EACPC,EAAaC,iBAAqB,EAUxC,SAASC,GAAoB,CAC3B,MAAMC,EAAkB,CACtB,OAAQ,CAAC,KAAM,CAAC,OAAQ,SAAS,CAAC,EAClC,UAAW,EACX,KAAM,CAAC,KAAMN,EAAM,OAAO,IAAI,CAAA,EAG5B,OAAAA,EAAM,OAAO,WACPM,EAAA,SAAWN,EAAM,OAAO,UAG9BA,EAAM,OAAO,YACfM,EAAQ,UAAY,CAAC,OAAQ,IAAIN,EAAM,OAAO,SAAS,GAAG,GAErDM,CACT,CAEM,MAAAC,EAAeC,EAAI,IAAI,EACvBC,EAAUD,EAAI,IAAI,EAElBE,EAAcC,EAAe,CACjC,IAAK,uDACL,WAAW,CAAE,OAAAC,EAAQ,OAAAC,GAAU,CACtB,MAAA,CACL,OAAAD,EACA,OAAAC,CAAA,CAEJ,EACA,SAAS,CAAE,OAAAD,EAAQ,OAAAC,GAAU,CAC3B,GAAI,CAACD,EAAc,KAAA,CAAE,QAAS,wBAC9B,GAAI,CAACC,EAAc,KAAA,CAAE,QAAS,oCAChC,EACA,UAAW,IAAM,CACfC,EAAM,QAAQ,4BAA4B,EAC1Cb,EAAK,QAAQ,EAEbE,EAAW,MAAQ,GAEZ,OAAA,KACL,OAAO,SAAS,OAAS,qBAAuBI,EAAa,MAC7D,QAAA,EAEFA,EAAa,MAAQ,IACvB,CAAA,CACD,EAEKQ,EAAmBC,GAAmB,CAC1C,QAAS,YACT,QAAS,CACP,KAAM,CAAC,IAAKT,CAAY,CAC1B,EACA,OAAQ,CAAC,SAAS,EAClB,UAAYU,GAAc,CACpBA,EAAK,OAAS,IACRR,EAAA,MAAQQ,EAAK,CAAC,EAAE,QAE5B,CAAA,CACD,EAEDC,EACE,IAAMX,EAAa,MAClBY,GAAa,CACRA,IACFJ,EAAiB,OAAO,CACtB,QAAS,CACP,KAAM,CAAC,IAAKI,CAAQ,CACtB,CAAA,CACD,EACDJ,EAAiB,OAAO,EAE5B,CAAA,EAGF,SAASK,GAAoB,CAC3BV,EAAY,OAAO,CACjB,OAAQV,EAAM,OAAO,KACrB,OAAQO,EAAa,KAAA,CACtB,CACH,sEAtKEV,EAyDST,EAAAiC,EAAA,EAAA,CAxDN,QAAS,CAAsC,MAAA,2BAAA,aACvClB,EAAU,2CAAVA,EAAU,MAAAmB,EAAA,GAER,iBACT,IAsCM,CAtCNC,EAsCM,MAtCNC,GAsCM,CArCJD,EAMI,IANJE,GAMI,eANmC,yCAErC,GAAAF,EAEC,OAFDG,GACG,IAAIC,EAAAA,EAAAA,OAAO,IAAI,EAAA,CAAA,gBACjB,yCAEH,EAAA,GACAC,EAUEC,EAAA,CATA,MAAM,eACN,QAAQ,YACR,YAAY,gBACX,QAASxB,EAAiB,EAC3B,MAAM,SACL,cAAa,GACb,MAAOE,EAAY,MACnB,mBAAkB,GAClB,SAAQuB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAR,GAAAf,EAAA,MAAe,OAAOe,CAAM,gCAG/Bf,EAAY,WADpBV,EAMEkC,EAAA,OAJA,MAAM,iBACN,KAAK,kBACItB,EAAO,2CAAPA,EAAO,MAAAa,GACf,SAAU,EAAA,mCAGbC,EAUM,MAVNS,GAUM,CAPJJ,EAEExC,EAAA6C,EAAA,EAAA,CADA,MAAM,0DAAyD,EAGjEH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAP,EAEM,MAFD,CAAA,MAAM,mCAAkC,iCAE7C,EAAA,EAAA,OAIK,UACT,IASE,CATFK,EASEM,EAAA,CARA,MAAM,SACN,QAAQ,QACP,MAAkB3B,EAAA,4BAAqCA,EAAY,KAAA,IAAA,gBAGnE,QAASnB,EAAWsB,CAAA,EAAC,QACrB,YAAWH,EAAY,OAAInB,EAAW+C,EAAA,EACtC,QAAOf,CAAA,kWCQhB,MAAMpB,EAAQV,EAERW,EAAOC,EAEJ,SAAAkC,EAAOC,EAAM,KAAM,OACtBA,EAAI,OAAS,OAAOA,EAAI,OAAU,WACpCA,EAAI,QAAQC,EAAAD,EAAI,MAAM,SAAV,YAAAC,EAAkB,QAAS,MAEzCrC,EAAK,SAAUoC,CAAG,CACpB,CAEM,MAAAE,EAAiB/B,EAAI,EAAK,EAE1BgC,EAAkBC,EAAS,IAE7B,CAACzC,EAAM,OAAO,WAAa,CAAC,OAAQ,SAAS,EAAE,SAASA,EAAM,OAAO,MAAM,CAE9E,8CA/EC,OAAAJ,EAAA,EAAAL,EA6CM,MA7CNiC,GA6CM,CA5CJD,EAuBM,MAvBNE,GAuBM,CApBJF,EAMO,OAAA,CALL,MAAM,oCACL,QAAKO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAR,GAAalC,EAAAsD,EAAA,EAAgBf,EAAM,OAAC,KAAUA,IAAAA,EAAAA,OAAO,IAAI,uBAAA,EAAA,EAG9D,IAAChC,EAAGgC,EAAM,OAAC,IAAI,EAAA,CAAA,EAGVa,EAAe,WADvB3C,EAYW8C,EAAA,OAVR,QAAO,mCAA+EJ,EAAc,MAAA,QAA4BnD,EAAW+C,EAAA,EAAgCR,UAAAA,IAAAA,CAAAA,EAAAA,OAAO,wBASnL,IAAuE,CAAvEC,EAAuEM,EAAA,CAA/D,KAAK,kBAAkB,MAAM,gBAAgB,QAAQ,OAAA,qCAGjEN,EAGEgB,GAAA,CAFC,QAASjB,EAAM,OAAC,QAChB,eAAaG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAe,GAAM5C,eAAmB4C,CAAC,wBAIlClB,EAAAA,OAAO,qBADf9B,EAIEiD,EAAA,OAFA,MAAM,4CACL,OAAQnB,EAAM,MAAA,+BAGjBC,EAAuCmB,GAAA,CAAlB,OAAQpB,EAAM,MAAA,EAAA,KAAA,EAAA,CAAA,QAAA,CAAA,EAEnCC,EAAuDoB,GAAA,CAAnC,OAAQrB,EAAM,OAAG,SAAQS,sBAGrCG,EAAc,WAFtB1C,EAKEoD,GAAA,OAJC,OAAQtB,EAAM,kBAENY,EAAc,2CAAdA,EAAc,MAAAjB,GACtB,wBAAQrB,EAAI,QAAA,EAAA,qXCoInB,MAAMiD,EAAQC,KACRC,EAASC,KAETC,EAAoBC,KACpB,CAAE,QAAAC,GAAYC,KACd,CAAE,QAAAC,GAAYC,KACdC,EAA2BpD,EAAI,IAAI,EACnCqD,EAAuBrD,EAAI,IAAI,EAC/BsD,EAAgBtD,EAAI,EAAE,EACtBuD,EAAYvD,EAAI,EAAK,EAErBR,EAAQV,EAMd4B,EACE,IAAMlB,EAAM,SACZ,IAAM,CACJ2B,EAAO,OAAO,CAChB,CAAA,EAGF,KAAM,CAAE,SAAAqC,CAAA,EAAaC,GAAQ,WAAW,EAExCC,GAAQ,oBAAqBL,CAAoB,EAE3C,MAAAM,EAAoB3D,EAAI,EAAK,EAE7BmB,EAAShB,EAAe,CAC5B,IAAK,kDACL,KAAM,GACN,WAAY,KAAO,CACjB,KAAMX,EAAM,QAAA,GAEd,UAAYiB,GAAS,CACfA,EAAK,UACFA,EAAA,UAAY,KAAK,MAAMA,EAAK,OAAO,EAAE,IAAKmD,IACtC,CACL,KAAMA,EACN,MAAOZ,EAAQY,CAAQ,EAAE,WACzB,MAAOZ,EAAQY,CAAQ,EAAE,SAAA,EAE5B,GAEHN,EAAc,MAAQ7C,EAAK,OAC7B,EACA,UAAYA,GAAS,CACnB,SAAS,MAAQA,EAAK,QACtBoD,GAAoB1C,EAAQ,CAC1B,IAAKV,EACL,KAAAqD,GACA,OAAAlB,EACA,MAAAtC,EACA,QAAA4C,EACA,YAAAa,EACA,YAAazD,EAAM,MAAA,CACpB,CACH,CAAA,CACD,EACD,SAASyD,EAAYC,EAAcC,EAAeC,EAAW,IAAM,CAAA,EAAI,CACrEC,EAAaH,EAAMC,CAAK,EACfC,GACX,CAEM,MAAAE,EAAcnC,EAAS,IAAM,aAC7B,IAAAoC,EAAQ,CAAC,CAAE,MAAO,UAAW,MAAO,CAAE,KAAM,cAAe,CAAA,CAAG,EAC9D,GAAA3B,EAAM,MAAM,KAAM,CACpB,MAAM4B,EAA8Bd,EAASd,EAAM,MAAM,IAAc,EACnE4B,GACFD,EAAM,KAAK,CACT,OAAOvC,EAAAwC,EAAS,QAAT,YAAAxC,EAAgB,MACvB,KAAMyC,IAAQC,EAAAF,EAAS,QAAT,YAAAE,EAAgB,IAAI,EAClC,MAAO,CAAE,KAAM,eAAgB,MAAO,CAAE,MAAMC,EAAAH,EAAS,QAAT,YAAAG,EAAgB,KAAO,CAAA,CACtE,CAEL,CACA,OAAAJ,EAAM,KAAK,CACT,OAAOK,EAAAvD,EAAO,OAAP,YAAAuD,EAAa,QACpB,QAAS,IAAM,CACbf,EAAkB,MAAQ,EAC5B,CAAA,CACD,EACMU,CAAA,CACR,EAEKM,EAAe,IAAM,OACrBrB,EAAc,UAAUxB,EAAAX,EAAO,OAAP,YAAAW,EAAa,WAC5BqC,EAAA,UAAWb,EAAc,KAAK,EAC3CK,EAAkB,MAAQ,GAAA,EAGtBiB,GAAkB3C,EAAS,IAC/Ba,EAAkB,QAAQ,IAAK,IAAO,CACpC,MAAO,EACP,MAAO,EACP,QAAS,IAAMqB,EAAa,SAAU,CAAC,EACvC,KAAM,IACJU,GAAEC,EAAe,CACf,MAAOhC,EAAkB,aAAa,CAAC,CAAA,CACxC,CAAA,EACH,CAAA,EAYEiC,EAAW/E,EAAI,CAAC,EAChBgF,GAAoB,CACxB,CACE,KAAM,WACN,MAAO,WACP,KAAMC,EACR,EACA,CACE,KAAM,QACN,MAAO,SACP,KAAMC,EACR,EACA,CACE,KAAM,UACN,MAAO,WACP,KAAMC,EACR,CAAA,EAGIC,EAAanD,EAAS,IAAM,CAChC,MAAMoD,EAAalE,EAAO,KAAK,eAAe,IAAI,CAACmE,EAAOC,KACjD,CACL,QAASD,EAAM,QACf,QAASA,EAAM,QACf,OAAQ,CAAE,KAAMA,EAAM,KAAK,MAAO,UAAWA,EAAM,KAAK,IAAK,EAC7D,GAAIA,EAAM,WACV,KAAM,QACN,IAAKA,EAAM,SACX,GAAIA,EAAM,GACV,IAAKA,EAAM,IACX,SAAUA,EAAM,oBAAsBA,EAAM,SAC5C,YAAaA,EAAM,YACnB,KAAMA,EAAM,KACZ,aAAcC,IAAQ,CAAA,EAEzB,EAEKC,EAAerE,EAAO,KAAK,SAAS,IAAKsE,IACtC,CACL,KAAMA,EAAQ,KACd,KAAM,UACN,IAAKA,EAAQ,SACb,YAAaA,EAAQ,aACrB,UAAWA,EAAQ,KAAK,KACxB,SAAUA,EAAQ,SAClB,QAASA,EAAQ,QACjB,YAAaA,EAAQ,WAAA,EAExB,EAEKC,EAAe,CAAC,GAAGvE,EAAO,KAAK,QAAS,GAAGA,EAAO,KAAK,KAAK,EAAE,IACjE0D,IACQ,CACL,KAAM,UACN,IAAKA,EAAE,SACP,QAASA,EAAE,OAASA,EAAE,OAAS,cAC/B,SAAUA,EAAE,SACZ,KAAMA,EAAE,KAAK,KAAO,GAAA,EAExB,EAGIc,EAAS,CAAC,GAAGN,EAAY,GAAGG,EAAc,GAAGE,CAAY,EAAE,KAC/D,CAAC,EAAGE,IAAM,IAAI,KAAK,EAAE,QAAQ,EAAI,IAAI,KAAKA,EAAE,QAAQ,CAAA,EAGhDnF,EAAO,CAAA,EACb,IAAIoF,EAAI,EAED,KAAAA,EAAIF,EAAO,QAAQ,CAClB,MAAAG,EAAkBH,EAAOE,CAAC,EAC5B,GAAAC,EAAgB,OAAS,UAAW,CACtBA,EAAA,kBAAoB,CAACA,CAAe,EACpD,QAASC,EAAIF,EAAI,EAAGE,EAAIJ,EAAO,OAAS,EAAGI,IAAK,CACxC,MAAAC,EAAeL,EAAOI,CAAC,EAE7B,GAAIC,GAAgBA,EAAa,OAASF,EAAgB,KACxCA,EAAA,kBAAkB,KAAKE,CAAY,MAC9C,CACLvF,EAAK,KAAKqF,CAAe,EACzBD,EAAIE,EAAI,EACR,KACF,CACF,CAAA,MAEAtF,EAAK,KAAKqF,CAAe,EAE3BD,GACF,CACO,OAAApF,CAAA,CACR,EAED,SAASwF,GAAiBC,EAAsB,CAC9C,OAAIA,IAAc,WACTd,EAAW,MAEbA,EAAW,MAAM,OAAQe,GAAaA,EAAS,OAASD,CAAS,CAC1E,CACM,MAAAE,EAAmBpG,EAAI,EAAK,EACzB,SAAAmE,EAAakC,EAAmBpC,EAAe,CACtDmC,EAAiB,MAAQ,GACrBnC,IAAU9C,EAAO,KAAKkF,CAAS,IACnCC,GAAiBD,EAAWpC,CAAK,EAElB9D,EAAA,CACb,IAAK,0BACL,OAAQ,CACN,QAAS,YACT,KAAMX,EAAM,SACZ,UAAA6G,EACA,MAAApC,CACF,EACA,SAAU,IACV,KAAM,GACN,UAAW,IAAM,CACfV,EAAU,MAAQ,GAClB6C,EAAiB,MAAQ,GACzBjF,EAAO,OAAO,CAChB,EACA,QAAUoF,GAAU,CAClB,GAAIH,EAAiB,MAAO,OAC5BA,EAAiB,MAAQ,GAEzB,MAAMI,EAAOD,EAAM,UACdA,EAAM,UAAYA,EAAM,SAAW,CAAI,GAAA,KAAK,IAAI,EACjDA,EAAM,QACVjG,EAAM,MAAMkG,CAAI,EAEhBrF,EAAO,OAAO,CAChB,CAAA,CACD,EACH,CAES,SAAAmF,GAAiBD,EAAmBpC,EAAe,CACnD9C,EAAA,KAAKkF,CAAS,EAAIpC,EACzB3D,EAAM,QAAQ,gBAAgB,CAChC,CAEA,OAAAmG,GAAU,IAAM,CACPC,EAAA,GAAG,yBAA2BC,GAAa,CAC5CA,IAAa,OAAOnH,EAAM,QAAQ,GACpC2B,EAAO,OAAO,CAChB,CACD,CAAA,CACF,EAEDyF,GAAY,IAAM,CAChB,SAAS,MAAQ,WACjBF,EAAO,IAAI,wBAAwB,CAAA,CACpC,8DAtbC,OAAAtH,EAAA,EAAAL,EAoIM,MApINiC,GAoIM,CAnIgBpC,EAAAuC,CAAA,EAAO,UAA3B9B,EAkDeT,EAAAiI,EAAA,EAAA,CAAA,IAAA,GAAA,CAjDF,gBACT,IAQc,CARdzF,EAQcxC,EAAAkI,EAAA,EAAA,CARA,MAAO1C,EAAW,MAAE,MAAM,aAAA,GAC3B,OAAM2C,EACf,CAIE,CALiB,KAAAC,KAAI,CAEfA,EAAK,UADb3H,EAIET,EAAAqI,EAAA,EAAA,OAFC,KAAMD,EAAK,KACZ,MAAM,uDAAA,mDAKH,iBACT,IAGE,OAAA,OAFMpI,EAAMuC,CAAA,EAAC,KAAK,oBADpB9B,EAGE6H,EAAA,OADC,QAAStI,EAAAuC,CAAA,EAAO,KAAK,cAAA,iCAEbvC,EAAAA,EAAAuC,CAAA,EAAO,KAAK,YAAZvC,MAAAA,EAAuB,YAAlCG,EAOM,MAAAkC,GAAA,EANJ7B,EAAA,EAAAC,EAKYE,EALIX,EAAMuC,CAAA,EAAC,KAAK,UAAU,QAAM,EAAA,SAAA,KAAA,EAAA,KAAA,WAC1C,IAGE,CAHFC,EAGExC,EAAAuI,EAAA,EAAA,CAFC,QAASvI,EAAAuC,CAAA,EAAO,KAAK,UACrB,uBAAOiG,EAAmB,MAAA,0CAIjCrI,EAMS,SAAA,OAJP,MAAM,0DACL,uBAAOqI,EAAmB,MAAA,KAC5B,UAED,GACAhG,EAgBWxC,EAAAyI,EAAA,EAAA,CAhBA,QAASzC,GAAe,OAAA,CACtB,QAAOmC,EAChB,CAYS,CAbW,KAAAO,KAAI,CACxBlG,EAYSM,EAAA,CAZA,MAAO9C,EAAAuC,CAAA,EAAO,KAAK,MAAA,GACf,SACT,IAEE,CAFFC,EAEExC,EAAAkG,CAAA,EAAA,CADC,MAAKyC,GAAE3I,KAAkB,aAAaA,EAAMuC,CAAA,EAAC,KAAK,MAAM,CAAA,uBAGlD,SACT,IAGE,CAHFC,EAGE9B,EAAA,CAFC,KAAMgI,EAAI,aAAA,eACX,MAAM,wFAQT1I,EAAAuC,CAAA,EAAO,MAAlB/B,IAAAL,EA+CM,MA/CNmC,GA+CM,CA9CJH,EAuCM,MAvCNS,GAuCM,CArCJT,EAsBM,MAtBNyG,GAsBM,CArBJpG,EAoBOxC,EAAA6I,EAAA,EAAA,YApBQ1C,EAAQ,2CAARA,EAAQ,MAAAjE,GAAG,KAAAkE,EAAA,aACxB,IAAW,CAAX5D,EAAWxC,EAAA8I,EAAA,CAAA,EACXtG,EAiBWxC,EAAA+I,EAAA,EAAA,CAjBgB,MAAM,UAAQ,CACvC,QAAAZ,EAAA,CAeE,CAhBgB,IAAAa,KAAG,OAAA,OACrBxG,EAeExC,EAAAiJ,EAAA,EAAA,SAdI,2BAAJ,IAAIzE,EACH,WAAY6C,GAAiB2B,EAAI,IAAI,EACrC,MAAOA,EAAI,MACX,iBAAehJ,EAAAA,EAAAuC,CAAA,EAAO,OAAPvC,YAAAA,EAAa,OAC5B,SAAM0C,EAAA,CAAA,IAAAA,EAAA,CAAA,OAAiD1C,EAAAuC,CAAA,EAAO,QAAM,GAKpE,gBAAWG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAsBe,IAAC,CAA+CgB,EAAA,MAAC,aAAahB,EAAC,CAAA,4FASzGhD,EAaET,EAAAkJ,EAAA,EAAA,SAZI,uBAAJ,IAAIzE,EACK,WAAAzE,EAAAuC,CAAA,EAAO,KAAP,sBAAAG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAR,GAAAlC,EAAAuC,CAAA,EAAO,KAAIL,GACnB,YAAY,EAAAlC,EAAAA,EAAAuC,CAAA,EAAO,OAAPvC,YAAAA,EAAa,SAAS,EAClC,YAAW,CAAE,EACb,aAAY,CAAE,EACd,KAAKA,EAAAA,EAAAuC,CAAA,EAAO,OAAPvC,YAAAA,EAAa,KAClB,SAAM0C,EAAA,CAAA,IAAAA,EAAA,CAAA,OAAqC1C,EAAAuC,CAAA,EAAO,SAAwBiC,EAAA,MAAyB,wBAAsB,0CAQ9HhC,EAKExC,EAAAmJ,EAAA,EAAA,CAJC,OAAQnJ,EAAMuC,CAAA,EAAC,KACf,SAAMG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAAA,CAAK,MAAA0G,EAAO,MAAA/D,CAAY,IAAAE,EAAa6D,EAAO/D,CAAK,GACvD,eAAa3C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAe,GAAMgB,EAAA,MAAqB,eAAc,GACtD,SAAM/B,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAR,GAAElC,EAAMuC,CAAA,EAAC,OAAM,mCAIlBvC,EAAAuC,CAAA,EAAO,QADf,EAAA9B,EAWET,EAAAqJ,EAAA,EAAA,kBATSrJ,EAAmBwI,CAAA,+CAAnBA,EAAmB,MAAAtG,EAAA,MAC3B,UAAWlC,EAAAuC,CAAA,EAAO,KAAK,UACvB,QAASrC,EAAQ,SAClB,QAAQ,YACP,SAAMwC,EAAA,EAAA,IAAAA,EAAA,EAAA,OAA6B1C,EAAAuC,CAAA,EAAO,QAAM,2DAOnDC,EAkBSxC,EAAAiC,EAAA,EAAA,YAlBQ8C,EAAiB,6CAAjBA,EAAiB,MAAA7C,GAAG,QAAS,CAA2B,MAAA,gBAAA,CAAA,GAC5D,iBACT,IAcM,CAdNC,EAcM,MAdNmH,GAcM,CAbJ9G,EAMExC,EAAAuJ,EAAA,EAAA,YALS7E,EAAa,6CAAbA,EAAa,MAAAxC,GACtB,KAAK,WACL,KAAK,KACL,QAAQ,SACP,SAAU,2BAEbM,EAKEM,EAAA,CAJA,QAAQ,QACP,QAAS6B,EAAS,MACnB,MAAM,SACL,QAAOoB"}