import { d as j, A as S, I as K, a7 as bt, a8 as Xe, c as T, a9 as ve, $ as je, M as te, a4 as fe, aa as yt, ab as U, ac as Ce, ad as _t, F as P, ae as et, Y as tt, af as ue, ag as We, ah as Te, ai as J, aj as Se, ak as ht, al as Ct, am as de, an as Y, ao as pe, e as r, f as I, w as h, k as _, G as H, h as e, C as ge, a2 as ke, l as d, x as Z, v as Oe, y as M, s as be, t as B, m as z, n as le, g as p, D as Je, E as Ye, a3 as qe, j as oe, ap as lt, a as Le, X as se, r as A, aq as Ae, z as G, ar as at, as as Ue, at as Ne, au as ye, R as me, av as kt, aw as wt, ax as ce, P as $t, ay as St, az as De, aA as Tt, aB as It, aC as Vt, aD as Re, aE as Lt, b as nt, H as st, aF as _e, aG as ie, aH as re, W as He, aI as Bt, O as Et, L as he, aJ as Ft, J as At, aK as xe, aL as Mt, a0 as Qe } from "./index-54e545bb.js"; import { s as jt, _ as ze } from "./Dropdown.vue_vue_type_script_setup_true_lang-20398480.js"; import { a as Ke, P as ot, b as Q, d as X, T as Dt, L as it } from "./more-horizontal-b561c647.js"; import { d as O } from "./dayjs-8f71cd34.js"; import { u as Rt } from "./knowledgeBase-de4d1c97.js"; import { _ as Be } from "./AttachmentItem.vue_vue_type_script_setup_true_lang-f98cb03f.js"; import { F as rt } from "./FileUploader-3bc7c8ba.js"; import { T as Ee } from "./TextEditor-bf30f06f.js"; import { _ as we } from "./TicketFeedback.vue_vue_type_script_setup_true_lang-525e5c2e.js"; import { _ as Pe } from "./UserAvatar.vue_vue_type_script_setup_true_lang-73349f36.js"; import { _ as Ie } from "./Autocomplete-3aa3344b.js"; import { _ as Ze } from "./Avatar.vue_vue_type_script_setup_true_lang-33c4215a.js"; import { _ as Pt } from "./EmailContent-821cc341.js"; import { a as Ot } from "./FadedScrollableDiv.vue_vue_type_script_setup_true_lang-897d9728.js"; import { _ as qt } from "./Link-5130f40e.js"; let Ut = j({ props: { onFocus: { type: Function, required: !0 } }, setup(t) { let l = S(!0); return () => l.value ? K(Xe, { as: "button", type: "button", features: bt.Focusable, onFocus(v) { v.preventDefault(); let a, o = 50; function i() { var u; if (o-- <= 0) { a && cancelAnimationFrame(a); return } if ((u = t.onFocus) != null && u.call(t)) { l.value = !1, cancelAnimationFrame(a); return } a = requestAnimationFrame(i) } a = requestAnimationFrame(i) } }) : null } }); var Nt = (t => (t[t.Forwards = 0] = "Forwards", t[t.Backwards = 1] = "Backwards", t))(Nt || {}), Ht = (t => (t[t.Less = -1] = "Less", t[t.Equal = 0] = "Equal", t[t.Greater = 1] = "Greater", t))(Ht || {}); let ut = Symbol("TabsContext"); function $e(t) { let l = ue(ut, null); if (l === null) { let v = new Error(`<${t} /> is missing a parent <TabGroup /> component.`); throw Error.captureStackTrace && Error.captureStackTrace(v, $e), v } return l } let Ge = Symbol("TabsSSRContext"), zt = j({ name: "TabGroup", emits: { change: t => !0 }, props: { as: { type: [Object, String], default: "template" }, selectedIndex: { type: [Number], default: null }, defaultIndex: { type: [Number], default: 0 }, vertical: { type: [Boolean], default: !1 }, manual: { type: [Boolean], default: !1 } }, inheritAttrs: !1, setup(t, { slots: l, attrs: v, emit: a }) { var o; let i = S((o = t.selectedIndex) != null ? o : t.defaultIndex), u = S([]), n = S([]), m = T(() => t.selectedIndex !== null), c = T(() => m.value ? t.selectedIndex : i.value); function b(g) { var f; let w = ve(x.tabs.value, U), s = ve(x.panels.value, U), y = w.filter(C => { var E; return !((E = U(C)) != null && E.hasAttribute("disabled")) }); if (g < 0 || g > w.length - 1) { let C = Te(i.value === null ? 0 : Math.sign(g - i.value), { [-1]: () => 1, 0: () => Te(Math.sign(g), { [-1]: () => 0, 0: () => 0, 1: () => 1 }), 1: () => 0 }), E = Te(C, { 0: () => w.indexOf(y[0]), 1: () => w.indexOf(y[y.length - 1]) }); E !== -1 && (i.value = E), x.tabs.value = w, x.panels.value = s } else { let C = w.slice(0, g), E = [...w.slice(g), ...C].find(L => y.includes(L)); if (!E) return; let R = (f = w.indexOf(E)) != null ? f : x.selectedIndex.value; R === -1 && (R = x.selectedIndex.value), i.value = R, x.tabs.value = w, x.panels.value = s } } let x = { selectedIndex: T(() => { var g, f; return (f = (g = i.value) != null ? g : t.defaultIndex) != null ? f : null }), orientation: T(() => t.vertical ? "vertical" : "horizontal"), activation: T(() => t.manual ? "manual" : "auto"), tabs: u, panels: n, setSelectedIndex(g) { c.value !== g && a("change", g), m.value || b(g) }, registerTab(g) { var f; if (u.value.includes(g)) return; let w = u.value[i.value]; if (u.value.push(g), u.value = ve(u.value, U), !m.value) { let s = (f = u.value.indexOf(w)) != null ? f : i.value; s !== -1 && (i.value = s) } }, unregisterTab(g) { let f = u.value.indexOf(g); f !== -1 && u.value.splice(f, 1) }, registerPanel(g) { n.value.includes(g) || (n.value.push(g), n.value = ve(n.value, U)) }, unregisterPanel(g) { let f = n.value.indexOf(g); f !== -1 && n.value.splice(f, 1) } }; je(ut, x); let k = S({ tabs: [], panels: [] }), V = S(!1); te(() => { V.value = !0 }), je(Ge, T(() => V.value ? null : k.value)); let $ = T(() => t.selectedIndex); return te(() => { fe([$], () => { var g; return b((g = t.selectedIndex) != null ? g : t.defaultIndex) }, { immediate: !0 }) }), yt(() => { if (!m.value || c.value == null || x.tabs.value.length <= 0) return; let g = ve(x.tabs.value, U); g.some((f, w) => U(x.tabs.value[w]) !== U(f)) && x.setSelectedIndex(g.findIndex(f => U(f) === U(x.tabs.value[c.value]))) }), () => { let g = { selectedIndex: i.value }; return K(P, [u.value.length <= 0 && K(Ut, { onFocus: () => { for (let f of u.value) { let w = U(f); if ((w == null ? void 0 : w.tabIndex) === 0) return w.focus(), !0 } return !1 } }), Ce({ theirProps: { ...v, ..._t(t, ["selectedIndex", "defaultIndex", "manual", "vertical", "onChange"]) }, ourProps: {}, slot: g, slots: l, attrs: v, name: "TabGroup" })]) } } }), Kt = j({ name: "TabList", props: { as: { type: [Object, String], default: "div" } }, setup(t, { attrs: l, slots: v }) { let a = $e("TabList"); return () => { let o = { selectedIndex: a.selectedIndex.value }, i = { role: "tablist", "aria-orientation": a.orientation.value }; return Ce({ ourProps: i, theirProps: t, slot: o, attrs: l, slots: v, name: "TabList" }) } } }), Zt = j({ name: "Tab", props: { as: { type: [Object, String], default: "button" }, disabled: { type: [Boolean], default: !1 }, id: { type: String, default: null } }, setup(t, { attrs: l, slots: v, expose: a }) { var o; let i = (o = t.id) != null ? o : `headlessui-tabs-tab-${et()}`, u = $e("Tab"), n = S(null); a({ el: n, $el: n }), te(() => u.registerTab(n)), tt(() => u.unregisterTab(n)); let m = ue(Ge), c = T(() => { if (m.value) { let s = m.value.tabs.indexOf(i); return s === -1 ? m.value.tabs.push(i) - 1 : s } return -1 }), b = T(() => { let s = u.tabs.value.indexOf(n); return s === -1 ? c.value : s }), x = T(() => b.value === u.selectedIndex.value); function k(s) { var y; let C = s(); if (C === Se.Success && u.activation.value === "auto") { let E = (y = Ct(n)) == null ? void 0 : y.activeElement, R = u.tabs.value.findIndex(L => U(L) === E); R !== -1 && u.setSelectedIndex(R) } return C } function V(s) { let y = u.tabs.value.map(C => U(C)).filter(Boolean); if (s.key === J.Space || s.key === J.Enter) { s.preventDefault(), s.stopPropagation(), u.setSelectedIndex(b.value); return } switch (s.key) { case J.Home: case J.PageUp: return s.preventDefault(), s.stopPropagation(), k(() => de(y, Y.First)); case J.End: case J.PageDown: return s.preventDefault(), s.stopPropagation(), k(() => de(y, Y.Last)) }if (k(() => Te(u.orientation.value, { vertical() { return s.key === J.ArrowUp ? de(y, Y.Previous | Y.WrapAround) : s.key === J.ArrowDown ? de(y, Y.Next | Y.WrapAround) : Se.Error }, horizontal() { return s.key === J.ArrowLeft ? de(y, Y.Previous | Y.WrapAround) : s.key === J.ArrowRight ? de(y, Y.Next | Y.WrapAround) : Se.Error } })) === Se.Success) return s.preventDefault() } let $ = S(!1); function g() { var s; $.value || ($.value = !0, !t.disabled && ((s = U(n)) == null || s.focus({ preventScroll: !0 }), u.setSelectedIndex(b.value), ht(() => { $.value = !1 }))) } function f(s) { s.preventDefault() } let w = jt(T(() => ({ as: t.as, type: l.type })), n); return () => { var s, y; let C = { selected: x.value, disabled: (s = t.disabled) != null ? s : !1 }, { ...E } = t, R = { ref: n, onKeydown: V, onMousedown: f, onClick: g, id: i, role: "tab", type: w.value, "aria-controls": (y = U(u.panels.value[b.value])) == null ? void 0 : y.id, "aria-selected": x.value, tabIndex: x.value ? 0 : -1, disabled: t.disabled ? !0 : void 0 }; return Ce({ ourProps: R, theirProps: E, slot: C, attrs: l, slots: v, name: "Tab" }) } } }), Gt = j({ name: "TabPanels", props: { as: { type: [Object, String], default: "div" } }, setup(t, { slots: l, attrs: v }) { let a = $e("TabPanels"); return () => { let o = { selectedIndex: a.selectedIndex.value }; return Ce({ theirProps: t, ourProps: {}, slot: o, attrs: v, slots: l, name: "TabPanels" }) } } }), Wt = j({ name: "TabPanel", props: { as: { type: [Object, String], default: "div" }, static: { type: Boolean, default: !1 }, unmount: { type: Boolean, default: !0 }, id: { type: String, default: null }, tabIndex: { type: Number, default: 0 } }, setup(t, { attrs: l, slots: v, expose: a }) { var o; let i = (o = t.id) != null ? o : `headlessui-tabs-panel-${et()}`, u = $e("TabPanel"), n = S(null); a({ el: n, $el: n }), te(() => u.registerPanel(n)), tt(() => u.unregisterPanel(n)); let m = ue(Ge), c = T(() => { if (m.value) { let k = m.value.panels.indexOf(i); return k === -1 ? m.value.panels.push(i) - 1 : k } return -1 }), b = T(() => { let k = u.panels.value.indexOf(n); return k === -1 ? c.value : k }), x = T(() => b.value === u.selectedIndex.value); return () => { var k; let V = { selected: x.value }, { tabIndex: $, ...g } = t, f = { ref: n, id: i, role: "tabpanel", "aria-labelledby": (k = U(u.tabs.value[b.value])) == null ? void 0 : k.id, tabIndex: x.value ? $ : -1 }; return !x.value && t.unmount && !t.static ? K(Xe, { as: "span", "aria-hidden": !0, ...f }) : Ce({ ourProps: f, theirProps: g, slot: V, attrs: l, slots: v, features: We.Static | We.RenderStrategy, visible: x.value, name: "TabPanel" }) } } }); const Jt = { __name: "TabList", setup(t) { const l = ue("tab"), v = S([]), a = S(null), o = T(() => { var n; return (n = l.value.tabs.value) == null ? void 0 : n.length }), i = S(""); function u(n) { n >= o.value && (n = o.value - 1); const m = v.value[n].el; l.value.vertical.value ? (a.value.style.height = `${m.offsetHeight}px`, a.value.style.top = `${m.offsetTop}px`) : (a.value.style.width = `${m.offsetWidth}px`, a.value.style.left = `${m.offsetLeft}px`) } return fe(() => l.value.tabIndex.value, n => { n >= o.value && (l.value.tabIndex.value = o.value - 1), i.value = "transition-all duration-300 ease-in-out", pe(() => u(n)) }), te(() => { pe(() => u(l.value.tabIndex.value)), setTimeout(() => u(l.value.tabIndex.value), 100) }), (n, m) => (r(), I(e(Kt), { class: Z(["relative flex", e(l).vertical ? "flex-col border-r overflow-y-auto" : "gap-7.5 border-b overflow-x-auto items-center px-5"]) }, { default: h(() => [(r(!0), _(P, null, H(e(l).tabs, (c, b) => (r(), I(e(Zt), { ref_for: !0, ref_key: "tabRef", ref: v, as: "template", key: b, class: "focus:outline-none focus:transition-none" }, { default: h(({ selected: x }) => [ge(n.$slots, "default", ke({ ref_for: !0 }, { tab: c, selected: x }), () => [d("button", { class: Z(["flex items-center gap-1.5 text-base text-ink-gray-5 duration-300 ease-in-out hover:text-ink-gray-9", [x ? "text-ink-gray-9" : "", e(l).vertical ? "py-2.5 px-4 border-r border-transparent hover:border-outline-gray-3" : "py-3 border-b border-transparent hover:border-outline-gray-3"]]) }, [c.icon ? (r(), I(Oe(c.icon), { key: 0, class: "size-4" })) : M("", !0), be(" " + B(c.label), 1)], 2)])]), _: 2 }, 1024))), 128)), d("div", { ref_key: "indicator", ref: a, class: Z(["tab-indicator absolute bg-surface-gray-7", [e(l).vertical ? "right-0 w-px" : "bottom-0 h-px", i.value]]) }, null, 2)]), _: 3 }, 8, ["class"])) } }, Yt = { __name: "TabPanel", setup(t) { const l = ue("tab"); return (v, a) => (r(), I(e(Gt), { class: "flex flex-1 overflow-hidden" }, { default: h(() => [(r(!0), _(P, null, H(e(l).tabs, (o, i) => (r(), I(e(Wt), { class: "flex flex-1 flex-col overflow-y-auto focus:outline-none", key: i }, { default: h(() => [ge(v.$slots, "default", ke({ ref_for: !0 }, { tab: o }))]), _: 2 }, 1024))), 128))]), _: 3 })) } }, Ln = { __name: "Tabs", props: z({ as: { type: String, default: "template" }, tabs: { type: Array, required: !0 }, vertical: { type: Boolean, default: !1 } }, { modelValue: {}, modelModifiers: {} }), emits: ["update:modelValue"], setup(t) { const l = t, v = le(t, "modelValue"); return je("tab", T(() => ({ tabIndex: v, tabs: l.tabs, vertical: l.vertical }))), (a, o) => (r(), I(e(zt), ke(t.as !== "template" ? { as: t.as, class: ["flex flex-1 overflow-hidden", t.vertical ? "" : "flex-col "] } : {}, { defaultIndex: v.value, selectedIndex: v.value, onChange: o[0] || (o[0] = i => v.value = i) }), { default: h(() => [ge(a.$slots, "default", {}, () => [p(Jt, null, { default: h(({ tab: i, selected: u }) => [ge(a.$slots, "tab-item", Je(Ye({ tab: i, selected: u })))]), _: 3 }), p(Yt, null, { default: h(({ tab: i }) => [ge(a.$slots, "tab-panel", Je(Ye({ tab: i })))]), _: 3 })])]), _: 3 }, 16, ["defaultIndex", "selectedIndex"])) } }, Qt = j({ __name: "SearchComplete", props: { value: { type: String, required: !1, default: "" }, doctype: { type: String, required: !0 }, searchField: { type: String, required: !1, default: "name" }, labelField: { type: String, required: !1, default: "name" }, valueField: { type: String, required: !1, default: "name" }, pageLength: { type: Number, required: !1, default: 100 }, resetInput: { type: Boolean, required: !1, default: !1 }, customFilters: { type: Object, required: !1, default: {} } }, emits: ["change"], setup(t, { emit: l }) { const v = l, a = t, o = qe({ doctype: a.doctype, pageLength: a.pageLength, auto: !0, fields: [a.labelField, a.searchField, a.valueField], filters: { [a.searchField]: ["like", `%${a.value}%`], ...a.customFilters }, onSuccess: () => { u.value = a.value ? i.value.find(m => m.value === a.value) : null } }), i = T(() => { var m; return ((m = o.data) == null ? void 0 : m.map(c => ({ label: c[a.labelField], value: c[a.valueField] }))) || [] }), u = S(null); function n(m) { o.update({ filters: { [a.searchField]: ["like", `%${m}%`], ...a.customFilters } }), o.reload() } return (m, c) => (r(), I(e(Ie), { placeholder: "Select an option", options: i.value, value: u.value, "onUpdate:query": c[0] || (c[0] = b => n(b)), onChange: c[1] || (c[1] = b => { t.resetInput || (u.value = b), v("change", b) }) }, null, 8, ["options", "value"])) } }), Xt = {}, el = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }; function tl(t, l) { return r(), _("svg", el, l[0] || (l[0] = [d("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M6.29021 2.64272C6.68375 0.785763 9.33429 0.785757 9.72783 2.64272L10.3657 5.65238L13.3753 6.29021C15.2323 6.68375 15.2323 9.33429 13.3753 9.72783L10.3657 10.3657L9.72783 13.3753C9.33429 15.2323 6.68375 15.2323 6.29021 13.3753L5.65238 10.3657L2.64272 9.72783C0.785763 9.33429 0.785757 6.68375 2.64272 6.29021L5.65238 5.65238L6.29021 2.64272ZM8.74956 2.85004C8.58 2.04999 7.43804 2.04998 7.26848 2.85004L6.56324 6.17777L6.49584 6.49583L6.17777 6.56324L2.85004 7.26848C2.04999 7.43804 2.04998 8.58 2.85004 8.74956L6.17777 9.4548L6.49584 9.5222L6.56324 9.84027L7.26848 13.168C7.43804 13.9681 8.58 13.9681 8.74956 13.168L9.4548 9.84027L9.5222 9.5222L9.84027 9.4548L13.168 8.74956C13.9681 8.58 13.9681 7.43804 13.168 7.26848L9.84027 6.56324L9.5222 6.49583L9.4548 6.17777L8.74956 2.85004Z", fill: "currentColor" }, null, -1)])) } const ll = oe(Xt, [["render", tl]]), al = {}, nl = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }; function sl(t, l) { return r(), _("svg", nl, l[0] || (l[0] = [d("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M12.5684 2.50774C11.5403 1.49742 9.95026 1.49742 8.92215 2.50774L3.62404 7.71417C2.12532 9.18695 2.12532 11.669 3.62404 13.1418C5.12762 14.6194 7.66861 14.6194 9.17219 13.1418L12.1609 10.2049C12.3578 10.0113 12.6744 10.0141 12.8679 10.211C13.0615 10.408 13.0587 10.7246 12.8618 10.9181L9.8731 13.8551C7.98045 15.715 4.81578 15.715 2.92313 13.8551C1.02562 11.9904 1.02562 8.86558 2.92313 7.00091L8.22124 1.79449C9.63842 0.401838 11.8521 0.401838 13.2693 1.79449C14.6914 3.19191 14.6914 5.38225 13.2693 6.77968L13.2668 6.78213L13.2668 6.78212L8.37876 11.5189C8.37834 11.5193 8.37793 11.5197 8.37752 11.5201C7.51767 12.3638 6.11144 12.3939 5.29119 11.5097C4.43611 10.6596 4.40778 9.26893 5.30922 8.46081L7.33823 6.46692C7.53518 6.27337 7.85175 6.27613 8.04531 6.47309C8.23886 6.67005 8.23609 6.98662 8.03913 7.18017L6.0014 9.18264L5.99203 9.19185L5.98219 9.20055C5.5391 9.59243 5.5104 10.3231 6.0014 10.8056L6.01078 10.8148L6.01967 10.8245C6.42299 11.2649 7.18224 11.2926 7.67785 10.8056L7.68034 10.8032L7.68035 10.8032L12.5684 6.06643C12.5688 6.06604 12.5692 6.06565 12.5696 6.06526C13.5917 5.05969 13.5913 3.51289 12.5684 2.50774Z", fill: "currentColor" }, null, -1)])) } const dt = oe(al, [["render", sl]]), ol = {}, il = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }; function rl(t, l) { return r(), _("svg", il, l[0] || (l[0] = [d("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M8 2.5C4.2911 2.5 1.5 4.84419 1.5 7.5C1.5 9.14452 2.54729 10.6518 4.25112 11.5816C4.50048 11.7177 4.758 12.0041 4.7326 12.4082C4.71107 12.7508 4.61659 13.2533 4.47175 13.6657C4.44071 13.7541 4.40789 13.8389 4.37434 13.9195C4.62005 13.8524 4.91964 13.7411 5.26646 13.5579C5.48882 13.4404 5.69385 13.2901 5.9102 13.1207C5.95058 13.089 5.9922 13.056 6.03481 13.0222C6.20816 12.8848 6.39803 12.7342 6.58835 12.6102C6.7875 12.4803 7.01146 12.4447 7.20831 12.4631C7.46767 12.4875 7.73186 12.5 8 12.5C11.7089 12.5 14.5 10.1558 14.5 7.5C14.5 4.84419 11.7089 2.5 8 2.5ZM0.5 7.5C0.5 4.08068 3.97691 1.5 8 1.5C12.0231 1.5 15.5 4.08068 15.5 7.5C15.5 10.9193 12.0231 13.5 8 13.5C7.70158 13.5 7.40709 13.4861 7.11751 13.459C6.97583 13.5528 6.83777 13.6621 6.67569 13.7905C6.62832 13.828 6.5789 13.8671 6.52674 13.908C6.30071 14.085 6.03818 14.2812 5.73354 14.4421C4.73389 14.9702 3.9948 15.0302 3.62977 15.0147C3.39759 15.0048 3.20936 14.8646 3.12194 14.6754C3.03801 14.4938 3.05143 14.2816 3.15736 14.1099C3.24804 13.963 3.40655 13.6808 3.52825 13.3343C3.62961 13.0457 3.70134 12.6878 3.72712 12.4347C1.81521 11.3748 0.5 9.58517 0.5 7.5Z", fill: "currentColor" }, null, -1)])) } const Ve = oe(ol, [["render", rl]]), ul = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, dl = ["r"], cl = { __name: "DotIcon", props: { radius: { type: Number, default: 3.5 } }, setup(t) { return (l, v) => (r(), _("svg", ul, [d("circle", { cx: "8", cy: "8", r: t.radius, fill: "currentColor" }, null, 8, dl)])) } }, ml = {}, fl = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }; function pl(t, l) { return r(), _("svg", fl, l[0] || (l[0] = [d("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M5.85355 3.14645C5.65829 2.95118 5.34171 2.95118 5.14645 3.14645L1.14645 7.14645C0.951184 7.34171 0.951184 7.65829 1.14645 7.85355L5.14645 11.8536C5.34171 12.0488 5.65829 12.0488 5.85355 11.8536C6.04882 11.6583 6.04882 11.3417 5.85355 11.1464L2.20711 7.5L5.85355 3.85355C6.04882 3.65829 6.04882 3.34171 5.85355 3.14645ZM10 8C11.933 8 13.5 9.567 13.5 11.5V12C13.5 12.2761 13.7239 12.5 14 12.5C14.2761 12.5 14.5 12.2761 14.5 12V11.5C14.5 9.01472 12.4853 7 10 7H6.6728L9.81924 3.85355C10.0145 3.65829 10.0145 3.34171 9.81924 3.14645C9.62398 2.95118 9.3074 2.95118 9.11214 3.14645L5.11214 7.14645C4.91688 7.34171 4.91688 7.65829 5.11214 7.85355L9.11214 11.8536C9.3074 12.0488 9.62398 12.0488 9.81924 11.8536C10.0145 11.6583 10.0145 11.3417 9.81924 11.1464L6.6728 8H10Z", fill: "currentColor" }, null, -1)])) } const vl = oe(ml, [["render", pl]]), xl = {}, gl = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }; function bl(t, l) { return r(), _("svg", gl, l[0] || (l[0] = [d("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M5.64645 3.14645C5.84171 2.95118 6.15829 2.95118 6.35355 3.14645C6.54882 3.34171 6.54882 3.65829 6.35355 3.85355L3.20711 7H10C12.4853 7 14.5 9.01472 14.5 11.5V12C14.5 12.2761 14.2761 12.5 14 12.5C13.7239 12.5 13.5 12.2761 13.5 12V11.5C13.5 9.567 11.933 8 10 8H3.20711L6.35355 11.1464C6.54882 11.3417 6.54882 11.6583 6.35355 11.8536C6.15829 12.0488 5.84171 12.0488 5.64645 11.8536L1.64645 7.85355C1.45118 7.65829 1.45118 7.34171 1.64645 7.14645L5.64645 3.14645Z", fill: "currentColor" }, null, -1)])) } const yl = oe(xl, [["render", bl]]), _l = {}, hl = { width: "16", height: "16", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }; function Cl(t, l) { return r(), _("svg", hl, l[0] || (l[0] = [d("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M5.85355 9.64645C5.65829 9.45118 5.34171 9.45118 5.14645 9.64645C4.95118 9.84171 4.95118 10.1583 5.14645 10.3536L7.64645 12.8536C7.84171 13.0488 8.15829 13.0488 8.35355 12.8536L10.8536 10.3536C11.0488 10.1583 11.0488 9.84171 10.8536 9.64645C10.6583 9.45118 10.3417 9.45118 10.1464 9.64645L8 11.7929L5.85355 9.64645ZM5.85355 6.35355C5.65829 6.54882 5.34171 6.54882 5.14645 6.35355C4.95118 6.15829 4.95118 5.84171 5.14645 5.64645L7.64645 3.14645C7.84171 2.95118 8.15829 2.95118 8.35355 3.14645L10.8536 5.64645C11.0488 5.84171 11.0488 6.15829 10.8536 6.35355C10.6583 6.54882 10.3417 6.54882 10.1464 6.35355L8 4.20711L5.85355 6.35355Z", fill: "currentColor" }, null, -1)])) } const kl = oe(_l, [["render", Cl]]), wl = { class: "mx-6 md:mx-10 flex items-center gap-2 border-y py-2.5" }, $l = { class: "flex flex-wrap gap-2 px-10" }, Sl = { class: "flex justify-between overflow-scroll pl-10 py-2.5 items-center" }, Tl = { class: "flex items-center overflow-x-auto w-[60%]" }, Il = { class: "flex gap-1" }, Vl = { class: "flex items-center justify-end space-x-2 sm:mt-0 w-[40%] mr-9" }, Ll = j({ __name: "EmailEditor", props: z({ placeholder: { type: String, default: null }, label: { type: String, default: "Send" }, editable: { type: Boolean, default: !0 }, doctype: { type: String, default: "HD Ticket" }, toEmails: { type: Array, default: () => [] }, ccEmails: { type: Array, default: () => [] }, bccEmails: { type: Array, default: () => [] } }, { modelValue: {}, modelModifiers: {} }), emits: z(["submit", "discard"], ["update:modelValue"]), setup(t, { expose: l, emit: v }) { const a = S(null), o = S(!1), i = t, u = T(() => q.loading ? "Sending..." : i.label), n = v, m = le(t, "modelValue"), c = lt("emailBoxContent" + m.value.name, ""), { updateOnboardingStep: b } = Ke("helpdesk"), { isManager: x } = Le(), k = S([]), V = T(() => ye(c.value)), $ = S([...i.toEmails]), g = S([...i.ccEmails]), f = S([...i.bccEmails]), w = S(!1), s = S(!1), y = T(() => { var N; return !!((N = g.value) != null && N.length) }), C = T(() => { var N; return !!((N = f.value) != null && N.length) }), E = S(null), R = S(null); function L(N) { c.value = N.message, o.value = !1 } const q = se({ url: "run_doc_method", makeParams: () => { var N, F; return { dt: i.doctype, dn: m.value.name, method: "reply_via_agent", args: { attachments: k.value.map(W => W.name), to: $.value.join(","), cc: (N = g.value) == null ? void 0 : N.join(","), bcc: (F = f.value) == null ? void 0 : F.join(","), message: c.value } } }, onSuccess: () => { pt(), n("submit"), x && b("reply_on_ticket") }, debounce: 300 }); function ae() { if (ye(c.value)) return !1; if (!$.value.length) return me.warning("Email has no recipients. Please add at least one email address in the 'TO' field."), !1; q.submit() } function ee() { w.value = !w.value, w.value && pe(() => { E.value.setFocus() }) } function ct() { s.value = !s.value, s.value && pe(() => { R.value.setFocus() }) } function mt(N) { k.value = k.value.filter(F => F !== N) } function ft(N, F, W, Fe) { $.value = F, g.value = W, f.value = Fe, a.value.editor.chain().clearContent().insertContent(N).focus("all").setBlockquote().insertContentAt(0, { type: "paragraph" }).focus("start").run() } function pt() { c.value = null, k.value = [] } function vt() { k.value = [], c.value = null, g.value = [], f.value = [], g.value = [], w.value = !1, s.value = !1, n("discard") } const xt = T(() => a.value.editor); return l({ addToReply: ft, editor: xt, submitMail: ae }), (N, F) => { const W = A("Button"), Fe = A("FeatherIcon"); return r(), _(P, null, [p(e(Ee), { ref_key: "editorRef", ref: a, "editor-class": ["prose-sm max-w-full mx-6 md:mx-10 max-h-[50vh] py-3", "min-h-[7rem]", e(Ne)(e(c)), t.editable && "!max-h-[35vh] overflow-y-auto"], content: e(c), "starterkit-options": { heading: { levels: [2, 3, 4, 5, 6] } }, placeholder: t.placeholder, editable: t.editable, onChange: F[8] || (F[8] = D => t.editable ? c.value = D : null), extensions: [e(ot)] }, { top: h(() => [d("div", wl, [F[10] || (F[10] = d("span", { class: "text-xs text-gray-500" }, "TO:", -1)), p(e(Me), { modelValue: $.value, "onUpdate:modelValue": F[0] || (F[0] = D => $.value = D), class: "flex-1", validate: e(Ae), "error-message": D => `${D} is an invalid email address` }, null, 8, ["modelValue", "validate", "error-message"]), p(W, { label: "CC", class: Z([y.value ? "bg-gray-300 hover:bg-gray-200" : ""]), onClick: F[1] || (F[1] = D => ee()) }, null, 8, ["class"]), p(W, { label: "BCC", class: Z([C.value ? "bg-gray-300 hover:bg-gray-200" : ""]), onClick: F[2] || (F[2] = D => ct()) }, null, 8, ["class"])]), w.value || y.value ? (r(), _("div", { key: 0, class: Z(["mx-10 flex items-center gap-2 py-2.5", y.value || w.value ? "border-b" : ""]) }, [F[11] || (F[11] = d("span", { class: "text-xs text-gray-500" }, "CC:", -1)), p(e(Me), { ref_key: "ccInput", ref: E, modelValue: g.value, "onUpdate:modelValue": F[3] || (F[3] = D => g.value = D), class: "flex-1", validate: e(Ae), "error-message": D => `${D} is an invalid email address` }, null, 8, ["modelValue", "validate", "error-message"])], 2)) : M("", !0), s.value || C.value ? (r(), _("div", { key: 1, class: Z(["mx-10 flex items-center gap-2 py-2.5", C.value || s.value ? "border-b" : ""]) }, [F[12] || (F[12] = d("span", { class: "text-xs text-gray-500" }, "BCC:", -1)), p(e(Me), { ref_key: "bccInput", ref: R, modelValue: f.value, "onUpdate:modelValue": F[4] || (F[4] = D => f.value = D), class: "flex-1", validate: e(Ae), "error-message": D => `${D} is an invalid email address` }, null, 8, ["modelValue", "validate", "error-message"])], 2)) : M("", !0)]), bottom: h(() => { var D; return [d("div", $l, [(r(!0), _(P, null, H(k.value, ne => (r(), I(e(Be), { key: ne.file_url, label: ne.file_name }, { suffix: h(() => [p(Fe, { class: "h-3.5", name: "x", onClick: G(gt => mt(ne), ["stop"]) }, null, 8, ["onClick"])]), _: 2 }, 1032, ["label"]))), 128))]), d("div", Sl, [d("div", Tl, [d("div", Il, [p(e(rt), { "upload-args": { doctype: t.doctype, docname: (D = t.modelValue) == null ? void 0 : D.name, private: !0 }, onSuccess: F[5] || (F[5] = ne => { k.value.push(ne) }) }, { default: h(({ openFileSelector: ne }) => [p(W, { variant: "ghost", onClick: gt => ne() }, { icon: h(() => [p(e(dt), { class: "h-4", style: { color: "#000000", "stroke-width": "1.5 !important" } })]), _: 2 }, 1032, ["onClick"])]), _: 1 }, 8, ["upload-args"]), p(W, { variant: "ghost", onClick: F[6] || (F[6] = ne => o.value = !0) }, { icon: h(() => [p(e(we), { class: "h-4", style: { color: "#000000", "stroke-width": "1.2" } })]), _: 1 })]), p(e(at), { class: "ml-1", buttons: e(Ue) }, null, 8, ["buttons"])]), d("div", Vl, [p(W, { label: "Discard", onClick: vt }), p(W, { variant: "solid", disabled: V.value, loading: e(q).loading, label: u.value, onClick: F[7] || (F[7] = () => { ae() }) }, null, 8, ["disabled", "loading", "label"])])])] }), _: 1 }, 8, ["editor-class", "content", "placeholder", "editable", "extensions"]), p(e(za), { modelValue: o.value, "onUpdate:modelValue": F[9] || (F[9] = D => o.value = D), doctype: t.doctype, onApply: L }, null, 8, ["modelValue", "doctype"])], 64) } } }), Bl = kt("agent", () => { const t = qe({ doctype: "HD Agent", fields: ["name", "agent_name", "user", "user.user_image"], filters: { is_active: 1 }, pageLength: 99999 }), l = T(() => { var a; return (a = t.data) == null ? void 0 : a.map(o => ({ label: o.agent_name, value: o.name })) }); function v(a) { return t.data.filter(o => { var i; return (i = o.user) == null ? void 0 : i.toLowerCase().includes(a.toLowerCase()) }) } return { dropdown: l, agents: t, searchAgents: v } }), El = { key: 0, class: "flex flex-col gap-2 px-6 md:pl-10 md:pr-9" }, Fl = { class: "flex flex-wrap gap-2" }, Al = { class: "flex justify-between overflow-hidden border-t py-2.5" }, Ml = { class: "flex items-center overflow-x-auto w-[60%]" }, jl = { class: "flex items-center justify-end space-x-2 w-[40%]" }, Dl = j({ __name: "CommentTextEditor", props: z({ placeholder: { type: String, default: null }, label: { type: String, default: "Comment" }, editable: { type: Boolean, default: !0 }, doctype: { type: String, default: "HD Ticket" } }, { modelValue: {}, modelModifiers: {} }), emits: z(["submit", "discard"], ["update:modelValue"]), setup(t, { expose: l, emit: v }) { const { updateOnboardingStep: a } = Ke("helpdesk"), { agents: o } = Bl(), { isManager: i } = Le(); te(() => { var y; o.loading || (y = o.data) != null && y.length || o.list.promise || o.fetch() }); const u = t, n = v, m = le(t, "modelValue"), c = lt("commentBoxContent" + m.value.name, ""), b = S([]), x = T(() => ye(c.value)), k = S(!1), V = T(() => k.value ? "Sending..." : u.label), $ = T(() => { var y; return ((y = o.data) == null ? void 0 : y.map(C => ({ label: C.agent_name.trimEnd(), value: C.name }))) || [] }); function g(y) { b.value = b.value.filter(C => C !== y) } async function f() { if (ye(c.value)) return !1; se({ url: "run_doc_method", makeParams: () => ({ dt: u.doctype, dn: m.value.name, method: "new_comment", args: { content: c.value, attachments: b.value } }), onSuccess: () => { i && a("comment_on_ticket"), n("submit"), k.value = !1, b.value = [], c.value = null }, onError: () => { k.value = !1 } }).submit() } const w = S(null), s = T(() => { var y; return (y = w.value) == null ? void 0 : y.editor }); return l({ submitComment: f, editor: s }), (y, C) => { const E = A("FeatherIcon"), R = A("Button"); return e(o).data ? (r(), I(e(Ee), { key: 0, ref_key: "editorRef", ref: w, "editor-class": ["prose-sm max-w-none", t.editable && "min-h-[7rem] mx-6 md:ml-10 md:mr-9 max-h-[50vh] overflow-y-auto border-t py-3", e(Ne)(e(c))], content: e(c), "starterkit-options": { heading: { levels: [2, 3, 4, 5, 6] } }, placeholder: t.placeholder, editable: t.editable, mentions: $.value, onChange: C[3] || (C[3] = L => t.editable ? c.value = L : null), extensions: [e(ot)] }, { bottom: h(() => [t.editable ? (r(), _("div", El, [d("div", Fl, [(r(!0), _(P, null, H(b.value, L => (r(), I(e(Be), { key: L.file_url, label: L.file_name }, { suffix: h(() => [p(E, { class: "h-3.5", name: "x", onClick: G(q => g(L), ["stop"]) }, null, 8, ["onClick"])]), _: 2 }, 1032, ["label"]))), 128))]), d("div", Al, [d("div", Ml, [p(e(at), { class: "-ml-1", buttons: e(Ue) }, null, 8, ["buttons"]), p(e(rt), { "upload-args": { doctype: t.doctype, docname: t.modelValue.name, private: !0 }, onSuccess: C[0] || (C[0] = L => b.value.push(L)) }, { default: h(({ openFileSelector: L }) => [p(R, { theme: "gray", variant: "ghost", onClick: q => L() }, { icon: h(() => [p(e(dt), { class: "h-4", style: { color: "#000000", "stroke-width": "1.5 !important" } })]), _: 2 }, 1032, ["onClick"])]), _: 1 }, 8, ["upload-args"])]), d("div", jl, [p(R, { label: "Discard", onClick: C[1] || (C[1] = () => { c.value = "", b.value = [], n("discard") }) }), p(R, { variant: "solid", label: V.value, disabled: x.value, loading: k.value, onClick: C[2] || (C[2] = () => { k.value = !0, f(), c.value = "" }) }, null, 8, ["label", "disabled", "loading"])])])])) : M("", !0)]), _: 1 }, 8, ["editor-class", "content", "placeholder", "editable", "mentions", "extensions"])) : M("", !0) } } }), Rl = { class: "flex flex-wrap gap-1" }, Pl = { class: "flex-1" }, Ol = { class: "mt-1 rounded-lg bg-white py-1 text-base shadow-2xl" }, ql = { class: "flex flex-col gap-1 p-1 text-gray-800" }, Ul = { class: "text-base font-medium" }, Nl = { class: "text-sm text-gray-600" }, Me = j({ __name: "MultiSelectInput", props: z({ validate: { type: Function, default: null }, errorMessage: { type: Function, default: t => `${t} is an Invalid value` } }, { modelValue: {}, modelModifiers: {} }), emits: ["update:modelValue"], setup(t, { expose: l }) { const v = t, a = le(t, "modelValue"), o = S([]), i = S(null), u = S(null), n = S(""), m = S(""), c = S(!1), b = T({ get: () => n.value || "", set: s => { n.value = "", s && (c.value = !1), s != null && s.value && $(s.value) } }); wt(n, s => { s = s || "", m.value !== s && (m.value = s, V(s)) }, { debounce: 300, immediate: !0 }); const x = se({ url: "frappe.desk.search.search_link", method: "POST", cache: [m.value, "Contact"], params: { txt: m.value, doctype: "Contact" }, transform: s => s.filter(C => C.description.split(", ")[1]).map(C => { let E = C.description.split(", ")[1]; return { label: C.label || E, value: E } }) }), k = T(() => { let s = x.data || []; return !s.length && n.value && s.push({ label: n.value, value: n.value }), s }); function V(s) { x.update({ params: { txt: s, doctype: "Contact" } }), x.reload() } const $ = s => { u.value = null, s && (s.split(",").forEach(C => { var E; if (C = C.trim(), C && !((E = a.value) != null && E.includes(C))) { if (C && v.validate && !v.validate(C)) { u.value = v.errorMessage(C); return } a.value ? a.value.push(C) : a.value = [C], C = C.replace(C, "") } }), !u.value && (s = "")) }, g = s => { a.value = a.value.filter(y => y !== s) }, f = () => { var y; if (n.value) return; let s = (y = o.value[o.value.length - 1]) == null ? void 0 : y.$el; document.activeElement === s ? (a.value.pop(), pe(() => { a.value.length ? (s = o.value[o.value.length - 1].$el, s == null || s.focus()) : w() })) : s == null || s.focus() }; function w() { i.value.$el.focus() } return l({ setFocus: w }), (s, y) => { const C = A("FeatherIcon"), E = A("Button"), R = A("ErrorMessage"); return r(), _("div", null, [d("div", Rl, [(r(!0), _(P, null, H(a.value, L => (r(), I(E, { ref_for: !0, ref_key: "emails", ref: o, key: L, label: L, theme: "gray", variant: "subtle", class: "rounded-full", onKeydownCapture: ce(G(f, ["stop"]), ["delete"]) }, { suffix: h(() => [p(C, { class: "h-3.5", name: "x", onClick: G(q => g(L), ["stop"]) }, null, 8, ["onClick"])]), _: 2 }, 1032, ["label", "onKeydownCapture"]))), 128)), d("div", Pl, [p(e(Vt), { modelValue: b.value, "onUpdate:modelValue": y[2] || (y[2] = L => b.value = L), nullable: "" }, { default: h(() => [p(e($t), { show: c.value, "onUpdate:show": y[1] || (y[1] = L => c.value = L), class: "w-full" }, { target: h(({ togglePopover: L }) => [p(e(St), { ref_key: "search", ref: i, class: "search-input form-input w-full border-none bg-white hover:bg-white focus:border-none focus:!shadow-none focus-visible:!ring-0", type: "text", value: n.value, autocomplete: "off", onChange: y[0] || (y[0] = q => { n.value = q.target.value, c.value = !0 }), onFocus: () => L(), onKeydownCapture: ce(G(f, ["stop"]), ["delete"]) }, null, 8, ["value", "onFocus", "onKeydownCapture"])]), body: h(({ isOpen: L }) => [De(d("div", null, [d("div", Ol, [p(e(Tt), { class: "my-1 max-h-[12rem] overflow-y-auto px-1.5", static: "" }, { default: h(() => [(r(!0), _(P, null, H(k.value, q => (r(), I(e(It), { key: q.value, value: q }, { default: h(({ active: ae }) => [d("li", { class: Z(["flex cursor-pointer items-center rounded px-2 py-1 text-base", { "bg-gray-100": ae }]) }, [p(e(Pe), { class: "mr-2", name: q.value, size: "lg" }, null, 8, ["name"]), d("div", ql, [d("div", Ul, B(q.label), 1), d("div", Nl, B(q.value), 1)])], 2)]), _: 2 }, 1032, ["value"]))), 128))]), _: 1 })])], 512), [[Re, L]])]), _: 1 }, 8, ["show"])]), _: 1 }, 8, ["modelValue"])])]), u.value ? (r(), I(R, { key: 0, class: "mt-2 pl-2", message: u.value }, null, 8, ["message"])) : M("", !0)]) } } }), Hl = { class: "flex flex-col comm-area" }, zl = { class: "flex justify-between gap-3 border-t px-6 md:px-10 py-4 md:py-2.5" }, Kl = { class: "flex gap-1.5" }, Zl = ["onKeydownCapture"], Gl = ["onKeydownCapture"], Bn = j({ __name: "CommunicationArea", props: z({ doctype: { type: String, default: "HD Ticket" }, toEmails: { type: Array, default: () => [] }, ccEmails: { type: Array, default: () => [] }, bccEmails: { type: Array, default: () => [] } }, { content: {}, contentModifiers: {}, modelValue: {}, modelModifiers: {} }), emits: z(["update"], ["update:content", "update:modelValue"]), setup(t, { expose: l, emit: v }) { const a = v, o = le(t, "content"), i = le(t, "modelValue"), { isMac: u } = Lt(), { isMobileView: n } = nt(), m = S(null), c = S(null); function b() { X.value && (X.value = !1), Q.value = !Q.value } function x() { Q.value && (Q.value = !1), X.value = !X.value } function k() { m.value.submitMail() && a("update") } function V() { c.value.submitComment() && a("update") } function $(g) { var f, w, s; Q.value = !0, m.value.addToReply(g.content, (f = g.to) == null ? void 0 : f.split(","), (w = g.cc) == null ? void 0 : w.split(","), (s = g.bcc) == null ? void 0 : s.split(",")) } return fe(() => Q.value, g => { var f, w, s; g && ((s = (w = (f = m.value) == null ? void 0 : f.editor) == null ? void 0 : w.commands) == null || s.focus()) }), fe(() => X.value, g => { var f, w, s; g && ((s = (w = (f = c.value) == null ? void 0 : f.editor) == null ? void 0 : w.commands) == null || s.focus()) }), l({ replyToEmail: $, toggleEmailBox: b, toggleCommentBox: x, editor: m }), (g, f) => { const w = A("Button"); return r(), _("div", Hl, [d("div", zl, [d("div", Kl, [p(w, { ref: "sendEmailRef", variant: "ghost", label: "Reply", class: Z([e(Q) ? "!bg-gray-300 hover:!bg-gray-200" : ""]), onClick: f[0] || (f[0] = s => b()) }, { prefix: h(() => [p(e(we), { class: "h-4" })]), _: 1 }, 8, ["class"]), p(w, { variant: "ghost", label: "Comment", class: Z([e(X) ? "!bg-gray-300 hover:!bg-gray-200" : ""]), onClick: f[1] || (f[1] = s => x()) }, { prefix: h(() => [p(e(Ve), { class: "h-4" })]), _: 1 }, 8, ["class"])])]), De(d("div", { class: "flex gap-1.5 flex-1", onKeydownCapture: [ce(G(k, ["ctrl", "stop"]), ["enter"]), ce(G(k, ["meta", "stop"]), ["enter"])] }, [p(e(Ll), { ref_key: "emailEditorRef", ref: m, label: e(n) ? "Send" : e(u) ? "Send (⌘ + ⏎)" : "Send (Ctrl + ⏎)", modelValue: i.value, "onUpdate:modelValue": f[2] || (f[2] = s => i.value = s), content: o.value, "onUpdate:content": f[3] || (f[3] = s => o.value = s), placeholder: "Hi John, we are looking into this issue.", "to-emails": t.toEmails, "cc-emails": t.ccEmails, "bcc-emails": t.bccEmails, onSubmit: f[4] || (f[4] = () => { Q.value = !1, a("update") }), onDiscard: f[5] || (f[5] = () => { Q.value = !1 }) }, null, 8, ["label", "modelValue", "content", "to-emails", "cc-emails", "bcc-emails"])], 40, Zl), [[Re, e(Q)]]), De(d("div", { onKeydownCapture: [ce(G(V, ["ctrl", "stop"]), ["enter"]), ce(G(V, ["meta", "stop"]), ["enter"])] }, [p(e(Dl), { ref_key: "commentTextEditorRef", ref: c, label: e(n) ? "Comment" : e(u) ? "Comment (⌘ + ⏎)" : "Comment (Ctrl + ⏎)", modelValue: i.value, "onUpdate:modelValue": f[6] || (f[6] = s => i.value = s), editable: e(X), doctype: t.doctype, placeholder: "@John could you please look into this?", onSubmit: f[7] || (f[7] = () => { X.value = !1, a("update") }), onDiscard: f[8] || (f[8] = () => { X.value = !1 }) }, null, 8, ["label", "modelValue", "editable", "doctype"])], 40, Gl), [[Re, e(X)]])]) } } }), Wl = { class: "flex flex-col gap-4" }, Jl = { class: "flex items-center gap-2 rounded-md p-2 ring-1 ring-gray-200" }, Yl = j({ __name: "TicketSplitModal", props: z({ ticket_id: {}, communication_id: {} }, { modelValue: { type: Boolean }, modelModifiers: {} }), emits: z(["update"], ["update:modelValue"]), setup(t, { emit: l }) { const v = t, a = le(t, "modelValue"), o = S(null), i = se({ url: "terrasuitehelpdesk.helpdesk.doctype.hd_ticket.api.split_ticket", makeParams({ subject: n, communication_id: m }) { return { subject: n, communication_id: m } }, validate({ subject: n, communication_id: m }) { if (!n) throw { message: "Subject is required" }; if (!m) throw { message: "Communication ID is required" } }, onSuccess: n => { me.success("Ticket split successfully"), a.value = !1, window.open(window.location.origin + "/helpdesk/tickets/" + n, "_blank"), window.location.reload() } }); function u() { i.submit({ subject: o.value, communication_id: v.communication_id }) } return (n, m) => { const c = A("FormControl"), b = A("Button"); return r(), I(e(st), { options: { title: "Split ticket" }, modelValue: a.value, "onUpdate:modelValue": m[1] || (m[1] = x => a.value = x) }, { "body-content": h(() => [d("div", Wl, [m[3] || (m[3] = d("p", { class: "text-p-base text-ink-gray-8" }, [be(" All "), d("span", { class: "underline" }, "emails/ comments"), be(" from this email onwards will be moved to new ticket. ")], -1)), p(c, { label: "New Ticket Subject", type: "text", modelValue: o.value, "onUpdate:modelValue": m[0] || (m[0] = x => o.value = x), placeholder: "Add a subject for the new ticket" }, null, 8, ["modelValue"]), d("div", Jl, [p(e(Dt), { class: "h-6 w-5 w-min-5 w-max-5 min-h-5 max-w-5 text-yellow-500" }), m[2] || (m[2] = d("div", { class: "text-wrap text-sm text-gray-700" }, " This action is irreversible. ", -1))])])]), actions: h(() => [p(b, { class: "w-full", variant: "solid", label: "Split into new ticket", loading: e(i).loading, "icon-left": e(it), onClick: u }, null, 8, ["loading", "icon-left"])]), _: 1 }, 8, ["modelValue"]) } } }), Ql = { class: "flex items-center justify-between gap-2" }, Xl = { key: 0, class: "flex items-center gap-2 text-sm" }, ea = { class: "leading-tight" }, ta = { class: "text-xs md:text-sm text-gray-600" }, la = { key: 0, class: "sm:flex hidden text-sm text-gray-600" }, aa = { key: 1, class: "flex items-center gap-1" }, na = { key: 0, class: "sm:flex hidden text-sm text-gray-600" }, sa = { class: "flex gap-0.5 items-center" }, oa = { class: "text-xs md:text-sm text-gray-600" }, ia = { class: "text-sm leading-5 text-gray-600" }, ra = { key: 0, class: "text-2xs mr-1 font-bold text-gray-500" }, ua = { key: 1 }, da = { key: 2 }, ca = { key: 3, class: "text-2xs mr-1 font-bold text-gray-500" }, ma = { key: 4 }, fa = { key: 5 }, pa = { key: 6, class: "text-2xs mr-1 font-bold text-gray-500" }, va = { key: 7 }, xa = { class: "flex flex-wrap gap-2" }, ga = j({ __name: "EmailArea", props: { activity: { type: Object, required: !0 }, showSplitOption: { type: Boolean, default: !1 } }, emits: ["reply"], setup(t, { emit: l }) { const v = t, { sender: a, to: o, cc: i, bcc: u, creation: n, subject: m, attachments: c, content: b, name: x } = v.activity, k = l, { isMobileView: V } = nt(), $ = S(!1); return (g, f) => { const w = A("Tooltip"), s = A("Button"), y = Pt; return r(), _(P, null, [d("div", ke(g.$attrs, { class: "grow cursor-pointer border-transparent bg-white rounded-md shadow text-base leading-6 transition-all duration-300 ease-in-out" }), [d("div", Ql, [e(V) ? (r(), _("div", Xl, [d("div", ea, [d("p", null, B(e(a).full_name || "No name found"), 1), p(w, { text: e(ie)(e(n), e(re)) }, { default: h(() => [d("p", ta, B(e(_e)(e(n))), 1)]), _: 1 }, 8, ["text"]), e(a).name ? (r(), _("p", la, B("<" + e(a).name + ">"), 1)) : M("", !0)])])) : (r(), _("div", aa, [d("span", null, B(e(a).full_name || "No name found"), 1), e(a).name ? (r(), _("span", na, B("<" + e(a).name + ">"), 1)) : M("", !0)])), d("div", sa, [e(V) ? M("", !0) : (r(), I(w, { key: 0, text: e(ie)(e(n), e(re)) }, { default: h(() => [d("p", oa, B(e(_e)(e(n))), 1)]), _: 1 }, 8, ["text"])), p(s, { variant: "ghost", class: "text-gray-700", onClick: f[0] || (f[0] = C => { var E; return k("reply", { content: e(b), to: ((E = e(a)) == null ? void 0 : E.name) ?? e(o) }) }) }, { default: h(() => [p(e(yl), { class: "h-4 w-4" })]), _: 1 }), p(s, { variant: "ghost", class: "text-gray-700", onClick: f[1] || (f[1] = C => { var E; return k("reply", { content: e(b), to: ((E = e(a)) == null ? void 0 : E.name) ?? e(o), cc: e(i), bcc: e(u) }) }) }, { default: h(() => [p(e(vl), { class: "h-4 w-4" })]), _: 1 }), t.showSplitOption ? (r(), I(e(ze), { key: 1, placement: "right", options: [{ label: "Split Ticket", icon: e(it), onClick: () => $.value = !0 }] }, { default: h(() => [p(s, { icon: "more-horizontal", class: "text-gray-600", variant: "ghost" })]), _: 1 }, 8, ["options"])) : M("", !0)])]), d("div", ia, [e(o) ? (r(), _("span", ra, "TO:")) : M("", !0), e(o) ? (r(), _("span", ua, B(e(o)), 1)) : M("", !0), e(i) ? (r(), _("span", da, ", ")) : M("", !0), e(i) ? (r(), _("span", ca, " CC: ")) : M("", !0), e(i) ? (r(), _("span", ma, B(e(i)), 1)) : M("", !0), e(u) ? (r(), _("span", fa, ", ")) : M("", !0), e(u) ? (r(), _("span", pa, " BCC: ")) : M("", !0), e(u) ? (r(), _("span", va, B(e(u)), 1)) : M("", !0)]), f[3] || (f[3] = d("div", { class: "border-0 border-t my-3 border-outline-gray-modals" }, null, -1)), p(y, { content: e(b) }, null, 8, ["content"]), d("div", xa, [(r(!0), _(P, null, H(e(c), C => (r(), I(e(Be), { key: C.file_url, label: C.file_name, url: C.file_url }, null, 8, ["label", "url"]))), 128))])], 16), p(Yl, { modelValue: $.value, "onUpdate:modelValue": f[2] || (f[2] = C => $.value = C), ticket_id: e(x), communication_id: e(x) }, null, 8, ["modelValue", "ticket_id", "communication_id"])], 64) } } }), ba = { class: "mb-1 ml-0.5 flex items-center justify-between" }, ya = { class: "text-gray-600 flex items-center gap-2" }, _a = { class: "font-medium text-gray-800" }, ha = { class: "flex items-center gap-1" }, Ca = { class: "pl-0.5 text-sm text-gray-600" }, ka = { key: 0 }, wa = { class: "rounded bg-gray-50 px-4 py-3" }, $a = { class: "flex flex-row-reverse gap-2" }, Sa = { key: 0, class: "flex flex-wrap gap-2" }, Ta = j({ __name: "CommentBox", props: { activity: { type: Object, required: !0 } }, emits: ["update"], setup(t, { emit: l }) { const v = Le(), a = t, { getUser: o } = He(), { name: i, creation: u, content: n, commenter: m, commentedBy: c, attachments: b } = a.activity, x = T(() => /has been merged with ticket #\d+/.test(n)), k = l, V = S(!1), $ = S(!1), g = S(n), f = S(null), w = S(null); function s() { $.value = !0, w.value.editor.chain().focus("start") } function y() { g.value = n, $.value = !1 } const C = se({ url: "frappe.client.delete", makeParams: () => ({ doctype: "HD Ticket Comment", name: i }), onSuccess() { k("update"), me.success("Comment deleted") } }); function E() { if (n === g.value) { $.value = !1; return } if (ye(g.value)) { me.error("Comment cannot be empty"); return } Rt.submit({ doctype: "HD Ticket Comment", name: i, fieldname: "content", value: g.value }, { onSuccess: () => { $.value = !1, k("update"), me.success("Comment updated") } }) } return te(() => { f.value.style.width = "0px" }), (R, L) => { const q = A("Tooltip"), ae = A("Button"); return r(), _(P, null, [d("div", { class: "flex-col text-base flex-1", ref_key: "commentBoxRef", ref: f }, [d("div", ba, [d("div", ya, [p(e(Ze), { size: "md", label: e(m), image: e(o)(e(c)).user_image }, null, 8, ["label", "image"]), d("p", null, [d("span", _a, B(e(m)), 1), L[2] || (L[2] = d("span", null, " added a", -1)), L[3] || (L[3] = d("span", { class: "max-w-xs truncate font-medium text-gray-800" }, " comment ", -1))])]), d("div", ha, [p(q, { text: e(ie)(e(u), e(re)) }, { default: h(() => [d("span", Ca, B(e(_e)(e(u))), 1)]), _: 1 }, 8, ["text"]), e(v).userId === e(c) && !$.value ? (r(), _("div", ka, [p(e(ze), { placement: "right", options: [{ label: "Edit", onClick: () => s(), icon: "edit-2", condition: () => !x.value }, { label: "Delete", onClick: () => V.value = !0, icon: "trash-2" }] }, { default: h(() => [p(ae, { icon: "more-horizontal", class: "text-gray-600", variant: "ghost" })]), _: 1 }, 8, ["options"])])) : M("", !0)])]), d("div", wa, [p(e(Ee), { ref_key: "editorRef", ref: w, "editor-class": ["prose-f shrink text-p-sm transition-all duration-300 ease-in-out block w-full content", e(Ne)(g.value)], content: g.value, editable: $.value, "bubble-menu": e(Ue), onChange: L[0] || (L[0] = ee => { g.value = ee }) }, Bt({ _: 2 }, [$.value ? { name: "bottom", fn: h(() => [d("div", $a, [p(ae, { label: "Save", onClick: E, variant: "solid" }), p(ae, { label: "Discard", onClick: y })])]), key: "0" } : void 0]), 1032, ["editor-class", "content", "editable", "bubble-menu"]), $.value ? M("", !0) : (r(), _("div", Sa, [(r(!0), _(P, null, H(e(b), ee => (r(), I(e(Be), { key: ee.file_url, label: ee.file_name, url: ee.file_url }, null, 8, ["label", "url"]))), 128))]))])], 512), p(e(st), { modelValue: V.value, "onUpdate:modelValue": L[1] || (L[1] = ee => V.value = ee), options: { title: "Delete Comment", message: "Are you sure you want to confirm this action?", actions: [{ label: "Cancel", onClick: () => V.value = !1 }, { label: "Delete", onClick: () => e(C).submit(), variant: "solid" }] } }, null, 8, ["modelValue", "options"])], 64) } } }), Ia = { class: "flex-1" }, Va = { class: "mt-1.5 flex justify-between text-base items-start md:items-center" }, La = { key: 0, class: "inline-flex flex-wrap gap-1.5 text-ink-gray-8 font-medium w-4/5" }, Ba = { key: 1, class: "text-gray-600 w-4/6" }, Ea = { class: "font-medium text-gray-800" }, Fa = { class: "text-gray-600 text-sm w-2/6 flex justify-end" }, Aa = { key: 0 }, Ma = { class: "text-gray-600 w-4/6" }, ja = { class: "font-medium text-gray-800" }, Da = { class: "text-gray-600 text-sm w-2/6 flex justify-end" }, Ra = j({ __name: "HistoryBox", props: { activity: { type: Object, required: !0 } }, setup(t) { const l = t, { user: v, content: a, creation: o, relatedActivities: i } = l.activity; let u = S(!1); return (n, m) => { const c = A("Button"), b = A("Tooltip"); return r(), _("div", Ia, [d("div", Va, [e(i).length > 1 ? (r(), _("div", La, [d("span", null, B(`${e(u) ? "Hide " : "Show "}`), 1), d("span", null, "+" + B(e(i).length), 1), m[1] || (m[1] = d("span", null, "changes from ", -1)), d("span", null, B(e(v)), 1), p(c, { class: "!size-4", variant: "ghost", onClick: m[0] || (m[0] = x => Et(u) ? u.value = !e(u) : u = !e(u)) }, { icon: h(() => [p(e(kl))]), _: 1 })])) : (r(), _("div", Ba, [d("span", Ea, B(e(v)), 1), d("span", null, B(e(a)), 1)])), p(b, { text: e(ie)(e(o), e(re)) }, { default: h(() => [d("div", Fa, B(e(_e)(e(o))), 1)]), _: 1 }, 8, ["text"])]), e(u) ? (r(), _("div", Aa, [(r(!0), _(P, null, H(e(i), x => (r(), _("div", { key: x.creation, class: "mt-2 flex justify-between text-base" }, [d("div", Ma, [d("span", ja, B(x.user), 1), d("span", null, B(x.content), 1)]), p(b, { text: e(ie)(x.creation, e(re)) }, { default: h(() => [d("div", Da, B(e(_e)(x.creation)), 1)]), _: 2 }, 1032, ["text"])]))), 128))])) : M("", !0)]) } } }), Pa = { class: "mt-3 flex flex-wrap items-center gap-2" }, En = j({ __name: "AssignmentModal", props: z({ assignees: { type: Array, required: !0 }, doctype: { type: String, required: !0 }, docname: { type: String, required: !0 } }, { modelValue: {}, modelModifiers: {} }), emits: z(["update"], ["update:modelValue"]), setup(t, { emit: l }) { const v = t, a = le(t, "modelValue"), o = l, { getUser: i } = He(), { updateOnboardingStep: u } = Ke("helpdesk"), { isManager: n } = Le(), m = S(""), c = k => { m.value = "", se({ url: "frappe.desk.form.assign_to.add", auto: !0, params: { doctype: v.doctype, name: v.docname, assign_to: [k] }, onSuccess: () => { o("update"), n && u("assign_to_agent") } }), o("update") }, b = k => { se({ url: "frappe.desk.form.assign_to.remove", auto: !0, params: { doctype: v.doctype, name: v.docname, assign_to: k }, onSuccess: () => { o("update") } }) }, x = T(() => { var V; const k = {}; return k.is_active = ["=", 1], (V = v.assignees) != null && V.length && (k.name = ["not in", [...v.assignees.map($ => $.name)]]), k }); return (k, V) => { const $ = A("Tooltip"), g = A("FeatherIcon"), f = A("Button"), w = A("ErrorMessage"), s = A("Dialog"); return r(), I(s, { modelValue: a.value, "onUpdate:modelValue": V[1] || (V[1] = y => a.value = y), options: { title: "Assign To", size: "xl" } }, { "body-content": h(() => [p(e(Qt), { class: "form-control", doctype: "HD Agent", "custom-filters": x.value, "reset-input": !0, onChange: V[0] || (V[0] = y => { c(y.value) }) }, { "item-prefix": h(({ option: y }) => [p(e(Pe), { class: "mr-2", name: y.value, size: "sm" }, null, 8, ["name"])]), "item-label": h(({ option: y }) => [p($, { text: y.value }, { default: h(() => [be(B(e(i)(y.value).full_name), 1)]), _: 2 }, 1032, ["text"])]), _: 1 }, 8, ["custom-filters"]), d("div", Pa, [(r(!0), _(P, null, H(t.assignees, y => (r(), I($, { key: y.name, text: y.name }, { default: h(() => [p(f, { label: e(i)(y.name).full_name, theme: "gray", variant: "outline" }, { prefix: h(() => [p(e(Pe), { name: y.name, size: "sm" }, null, 8, ["name"])]), suffix: h(() => [p(g, { class: "h-3.5", name: "x", onClick: G(C => b(y.name), ["stop"]) }, null, 8, ["onClick"])]), _: 2 }, 1032, ["label"])]), _: 2 }, 1032, ["text"]))), 128))]), m.value ? (r(), I(w, { key: 0, class: "mt-2", message: m.value }, null, 8, ["message"])) : M("", !0)]), _: 1 }, 8, ["modelValue"]) } } }), Oa = { key: 0, class: "mt-2 grid max-h-[560px] grid-cols-1 md:grid-cols-3 gap-2 overflow-y-auto" }, qa = ["onClick"], Ua = { class: "border-b pb-2 text-base font-semibold" }, Na = { key: 1, class: "mt-2" }, Ha = { class: "flex justify-end mt-4" }, za = { __name: "CannedResponseSelectorModal", props: z({ doctype: { type: String, default: "" } }, { modelValue: {}, modelModifiers: {} }), emits: z(["apply"], ["update:modelValue"]), setup(t, { emit: l }) { const v = t, a = le(t, "modelValue"), o = S(""), i = l, u = S(""), n = qe({ type: "list", doctype: "HD Canned Response", cache: ["cannedResponses", v.doctype], fields: ["title", "message", "modified"], orderBy: "modified desc", pageLength: 99999 }); te(() => { n.data == null && n.fetch() }); const m = T(() => { var c; return ((c = n.data) == null ? void 0 : c.filter(b => b.title.toLowerCase().includes(u.value.toLowerCase()))) ?? [] }); return fe(a, c => c && pe(() => { var b, x; return (x = (b = o.value) == null ? void 0 : b.el) == null ? void 0 : x.focus() })), (c, b) => { const x = A("FeatherIcon"), k = A("TextInput"), V = A("Button"), $ = A("Dialog"); return r(), I($, { modelValue: a.value, "onUpdate:modelValue": b[2] || (b[2] = g => a.value = g), options: { title: "Canned Responses", size: "4xl" } }, { "body-content": h(() => [p(k, { ref_key: "searchInput", ref: o, modelValue: u.value, "onUpdate:modelValue": b[0] || (b[0] = g => u.value = g), type: "text", placeholder: "Site Down" }, { prefix: h(() => [p(x, { name: "search", class: "h-4 w-4 text-gray-500" })]), _: 1 }, 8, ["modelValue"]), m.value.length ? (r(), _("div", Oa, [(r(!0), _(P, null, H(m.value, g => (r(), _("div", { key: g.name, class: "flex h-56 cursor-pointer flex-col gap-2 rounded-lg border p-3 hover:bg-gray-100", onClick: f => i("apply", g) }, [d("div", Ua, B(g.title), 1), g.message ? (r(), I(e(Ee), { key: 0, content: g.message, editable: !1, "editor-class": "!prose-sm max-w-none !text-sm text-gray-600 focus:outline-none", class: "flex-1 overflow-hidden" }, null, 8, ["content"])) : M("", !0)], 8, qa))), 128))])) : (r(), _("div", Na, b[3] || (b[3] = [d("div", { class: "flex h-56 flex-col items-center justify-center" }, [d("div", { class: "text-lg text-gray-500" }, B("No templates found"))], -1)]))), d("div", Ha, [p(V, { label: "New Canned Response", onClick: b[1] || (b[1] = () => { c.$router.push("/canned-responses#new"), e(n).data = null }) })])]), _: 1 }, 8, ["modelValue"]) } } }, Ka = { class: "flex items-center justify-start gap-5 border-b p-5" }, Za = { class: "flex items-center justify-between flex-1" }, Ga = { class: "w-[242px] truncate text-2xl font-medium" }, Wa = { class: "flex gap-1.5" }, Fn = j({ __name: "TicketAgentContact", props: { contact: { type: Object, required: !0 } }, emits: ["email:open"], setup(t, { emit: l }) { const v = t, a = l; function o() { a("email:open", v.contact.email_id) } return (i, u) => { const n = A("Button"); return r(), _("div", Ka, [p(e(Ze), { size: "3xl", image: t.contact.image, label: t.contact.name }, null, 8, ["image", "label"]), d("div", Za, [p(e(he), { text: t.contact.name }, { default: h(() => [d("div", Ga, B(t.contact.name), 1)]), _: 1 }, 8, ["text"]), d("div", Wa, [p(e(he), { text: t.contact.email_id }, { default: h(() => [p(n, { class: "h-7 w-7" }, { icon: h(() => [p(e(we), { class: "h-4 w-4", onClick: u[0] || (u[0] = m => o()) })]), _: 1 })]), _: 1 }, 8, ["text"])])])]) } } }), Ja = { class: "md:mx-10 md:my-4 flex items-center justify-between text-lg font-medium mx-6 mb-4 !mt-8" }, Ya = { class: "flex h-8 items-center text-xl font-semibold text-gray-800" }, Qa = j({ __name: "ActivityHeader", props: { title: { type: String, required: !0 } }, setup(t) { const l = ue("communicationArea"), v = T(() => [{ icon: K(we, { class: "h-4 w-4" }), label: "Email", onClick: () => l.value.toggleEmailBox() }, { icon: K(Ve, { class: "h-4 w-4" }), label: "Comment", onClick: () => l.value.toggleCommentBox() }]); return (a, o) => { const i = A("FeatherIcon"), u = A("Button"); return r(), _("div", Ja, [d("div", Ya, B(t.title), 1), t.title == "Emails" ? (r(), I(u, { key: 0, variant: "solid", onClick: o[0] || (o[0] = n => e(l).toggleEmailBox()) }, { prefix: h(() => [p(i, { name: "plus", class: "h-4 w-4" })]), default: h(() => [o[3] || (o[3] = d("span", null, B("New Email"), -1))]), _: 1, __: [3] })) : t.title == "Comments" ? (r(), I(u, { key: 1, variant: "solid", onClick: o[1] || (o[1] = n => e(l).toggleCommentBox()) }, { prefix: h(() => [p(i, { name: "plus", class: "h-4 w-4" })]), default: h(() => [o[4] || (o[4] = d("span", null, B("New Comment"), -1))]), _: 1, __: [4] })) : (r(), I(e(ze), { key: 2, options: v.value, onClick: o[2] || (o[2] = G(() => { }, ["stop"])) }, { default: h(({ open: n }) => [p(u, { variant: "solid", class: "flex items-center gap-1" }, { prefix: h(() => [p(i, { name: "plus", class: "h-4 w-4" })]), suffix: h(() => [p(i, { name: n ? "chevron-up" : "chevron-down", class: "h-4 w-4" }, null, 8, ["name"])]), default: h(() => [o[5] || (o[5] = d("span", null, B("New"), -1))]), _: 2, __: [5] }, 1024)]), _: 1 }, 8, ["options"]))]) } } }), Xa = { key: 0, class: "activities flex-1 h-full mt-1" }, en = { class: "w-full px-6 md:px-10 grid grid-cols-[30px_minmax(auto,_1fr)] gap-2 sm:gap-4" }, tn = { key: 1, class: "h-full flex flex-col items-center justify-center gap-3 text-xl font-medium text-gray-500" }, An = j({ __name: "TicketAgentActivities", props: { activities: { type: Array, required: !0 }, title: { type: String, required: !0 }, ticketStatus: { type: String, default: "" } }, emits: ["email:reply", "update"], setup(t, { expose: l, emit: v }) { const a = t, o = v, { getUser: i } = He(), u = ue("communicationArea"), n = T(() => { let b = "No Activities"; if (a.title == "Emails") b = "No Email Communications"; else if (a.title == "Comments") return b = "No Comments", b }), m = T(() => { let b = ll; return a.title == "Emails" ? b = we : a.title == "Comments" && (b = Ve), K(b, { class: "text-gray-500" }) }); function c() { setTimeout(() => { let b, x = document.getElementsByClassName("activity"); b = x[x.length - 1], b && !Ft(b).value && (b.scrollIntoView(), b.focus()) }, 500) } return l({ scrollToLatestActivity: c }), te(() => { c() }), fe(() => a.title, () => { c() }), (b, x) => { const k = Qa, V = A("Button"); return r(), _(P, null, [p(k, { title: t.title }, null, 8, ["title"]), p(e(Ot), { class: "flex flex-col flex-1 overflow-y-scroll" }, { default: h(() => [t.activities.length ? (r(), _("div", Xa, [(r(!0), _(P, null, H(t.activities, ($, g) => { var f, w; return r(), _("div", { key: $.key, class: "activity" }, [d("div", en, [d("div", { class: Z(["relative flex justify-center after:absolute after:left-[50%] after:top-2 after:-z-10 after:border-l after:border-gray-200", [g != t.activities.length - 1 ? "after:h-full" : "after:h-4"]]) }, [d("div", { class: Z(["z-10 flex h-7 w-7 items-center justify-center rounded-full bg-white", [$.type === "email" && "mt-2"]]) }, [$.type === "email" ? (r(), I(e(Ze), { key: 0, size: "lg", label: (f = $.sender) == null ? void 0 : f.full_name, image: e(i)((w = $.sender) == null ? void 0 : w.name).user_image, class: "bg-white absolute left-[1px]" }, null, 8, ["label", "image"])) : $.type === "comment" ? (r(), I(e(Ve), { key: 1, class: "text-gray-600 absolute left-[7.5px]" })) : (r(), I(e(cl), { key: 2, class: "text-gray-600 absolute left-[7.5px]" }))], 2)], 2), d("div", { class: Z(["mb-4 flex flex-1", [g == t.activities.length - 1 && "mb-5"]]) }, [$.type === "email" ? (r(), I(e(ga), { key: 0, activity: $, "show-split-option": !$.isFirstEmail && t.ticketStatus !== "Closed", class: "py-2 px-3", onReply: x[0] || (x[0] = s => o("email:reply", s)) }, null, 8, ["activity", "show-split-option"])) : $.type === "comment" ? (r(), I(e(Ta), { key: 1, activity: $, onUpdate: x[1] || (x[1] = () => o("update")) }, null, 8, ["activity"])) : (r(), I(e(Ra), { key: 2, activity: $ }, null, 8, ["activity"]))], 2)])]) }), 128))])) : (r(), _("div", tn, [(r(), I(Oe(m.value), { class: "h-10 w-10" })), d("span", null, B(n.value), 1), t.title == "Emails" ? (r(), I(V, { key: 0, label: "New Email", onClick: x[2] || (x[2] = $ => e(u).toggleEmailBox()) })) : t.title == "Comments" ? (r(), I(V, { key: 1, label: "New Comment", onClick: x[3] || (x[3] = $ => e(u).toggleCommentBox()) })) : M("", !0)]))]), _: 1 })], 64) } } }), ln = { class: "flex flex-col gap-3 border-b px-6 py-3" }, an = { class: "w-[126px] text-sm text-gray-600" }, nn = { class: "flex items-center justify-between" }, sn = { key: 0 }, Mn = j({ __name: "TicketAgentDetails", props: { ticket: { type: Object, required: !0 } }, setup(t) { const l = t, v = T(() => { let i = null; return !l.ticket.first_responded_on && O().isBefore(O(l.ticket.response_by)) ? i = { label: `Due in ${xe(O(l.ticket.response_by).diff(O(), "s"))}`, color: "orange" } : O(l.ticket.first_responded_on).isBefore(O(l.ticket.response_by)) ? i = { label: `Fulfilled in ${xe(O(l.ticket.first_responded_on).diff(O(l.ticket.creation), "s"))}`, color: "green" } : i = { label: "Failed", color: "red" }, i }), a = T(() => { let i = null; return l.ticket.status === "Replied" && l.ticket.on_hold_since && O(l.ticket.resolution_by).isAfter(O(l.ticket.on_hold_since)) ? i = { label: `${xe(O(l.ticket.resolution_by).diff(O(l.ticket.on_hold_since), "s"))} left (On Hold)`, color: "blue" } : !l.ticket.resolution_date && O().isBefore(l.ticket.resolution_by) ? i = { label: `Due in ${xe(O(l.ticket.resolution_by).diff(O(), "s"))}`, color: "orange" } : O(l.ticket.resolution_date).isBefore(l.ticket.resolution_by) ? i = { label: `Fulfilled in ${xe(O(l.ticket.resolution_date).diff(O(l.ticket.creation), "s"))}`, color: "green" } : i = { label: "Failed", color: "red" }, i }), o = T(() => [{ label: "First Response", tooltipValue: ie(l.ticket.first_responded_on || l.ticket.response_by, re), badgeText: v.value.label, badgeColor: v.value.color }, { label: "Resolution", tooltipValue: ie(l.ticket.resolution_date || l.ticket.resolution_by, re), badgeText: a.value.label, badgeColor: a.value.color }, { label: "Source", value: l.ticket.via_customer_portal ? "Portal" : "Mail" }]); return (i, u) => (r(), _("div", ln, [(r(!0), _(P, null, H(o.value, n => (r(), _("div", { key: n.label, class: "flex items-center text-base leading-5" }, [p(e(he), { text: n.label }, { default: h(() => [d("div", an, B(n.label), 1)]), _: 2 }, 1032, ["text"]), d("div", nn, [n.value ? (r(), _("div", sn, B(n.value), 1)) : M("", !0), p(e(he), { text: n.tooltipValue }, { default: h(() => [n.badgeText ? (r(), I(e(At), { key: 0, class: "-ml-1", label: n.badgeText, variant: "subtle", theme: n.badgeColor }, null, 8, ["label", "theme"])) : M("", !0)]), _: 2 }, 1032, ["text"])])]))), 128))])) } }), on = { class: "flex gap-2 px-6 pb-1 leading-5 first:mt-3 items-baseline" }, rn = { class: "w-[106px] shrink-0 truncate text-sm text-gray-600" }, un = { key: 0, class: "text-red-500" }, dn = { class: "-m-0.5 min-h-[28px] flex-1 items-center overflow-hidden p-0.5 text-base" }, cn = j({
    __name: "UniInput2", props: { field: {}, value: { type: [String, Number, Boolean] } }, emits: ["change"], setup(t, { emit: l }) {
        const v = t, a = l, o = ["Long Text", "Small Text", "Text", "Text Editor", "Data"], i = T(() => v.field.url_method ? K(Ie, { options: u.data }) : v.field.fieldtype === "Link" && v.field.options ? K(qt, { doctype: v.field.options, hideMe: !0 }) : v.field.fieldtype === "Select" ? K(Ie, {
            options: v.field.options.split(`
`).map(c => ({ label: c, value: c }))
        }) : v.field.fieldtype === "Check" ? K(Ie, { options: [{ label: "Yes", value: 1 }, { label: "No", value: 0 }] }) : o.includes(v.field.fieldtype) ? K(Qe, { type: "textarea" }) : K(Qe)), u = se({ url: v.field.url_method, auto: !!v.field.url_method, transform: c => c.map(b => ({ label: b, value: b })) }), n = T(() => v.field.fieldtype === "Check" ? v.value ? "Yes" : "No" : v.value); function m(c, b) { a("change", { fieldname: c, value: b }) } return (c, b) => (r(), _("div", on, [p(e(he), { text: c.field.label }, { default: h(() => [d("div", rn, [be(B(c.field.label) + " ", 1), c.field.required ? (r(), _("span", un, " * ")) : M("", !0)])]), _: 1 }, 8, ["text"]), d("div", dn, [(r(), I(Oe(i.value), ke({ key: c.field.fieldname, class: "form-control", placeholder: `Add ${c.field.label}`, "model-value": n.value, autocomplete: "off" }, Mt(o.includes(c.field.fieldtype) ? { blur: x => { m(c.field.fieldname, x.target.value) } } : { "update:model-value": x => { var k; m(c.field.fieldname, (x == null ? void 0 : x.value) || ((k = x == null ? void 0 : x.target) == null ? void 0 : k.value) || x) } })), null, 16, ["placeholder", "model-value"]))])]))
    }
}); const mn = oe(cn, [["__scopeId", "data-v-dea72048"]]), fn = { class: "flex flex-1 flex-col overflow-hidden overflow-y-auto border-b" }, pn = j({ __name: "TicketAgentFields", props: { ticket: { type: Object, required: !0 } }, emits: ["update"], setup(t, { emit: l }) { const v = l, a = t, o = T(() => a.ticket.fields); function i(u, n, m = null) { if (u === "subject" && n === "") { me.error("Subject is required"), m.target.value = a.ticket.subject; return } v("update", { field: u, value: n }) } return (u, n) => (r(), _("div", fn, [(r(!0), _(P, null, H(o.value, m => (r(), I(mn, { key: m.fieldname, field: m, value: t.ticket[m.fieldname], onChange: n[0] || (n[0] = c => i(c.fieldname, c.value)) }, null, 8, ["field", "value"]))), 128))])) } }); const jn = oe(pn, [["__scopeId", "data-v-a9303fca"]]); export { ll as A, Ve as C, jn as T, Jt as _, Yt as a, Mn as b, An as c, Ln as d, Bn as e, En as f, Fn as g };
//# sourceMappingURL=TicketAgentFields-bddea162.js.map
