{"version":3,"file":"Customers-bf4ab84c.js","sources":["../../../../desk/src/components/desk/global/NewCustomerDialog.vue","../../../../desk/src/pages/desk/customer/CustomerDialog.vue","../../../../desk/src/pages/desk/customer/Customers.vue"],"sourcesContent":["<template>\n  <div>\n    <Dialog\n      v-model=\"model\"\n      :options=\"{ title: 'Add New Customer', size: 'sm' }\"\n    >\n      <template #body-content>\n        <div class=\"space-y-4\">\n          <div class=\"space-y-1\">\n            <Input\n              v-model=\"state.customer\"\n              label=\"Customer Name\"\n              type=\"text\"\n              placeholder=\"Tesla Inc.\"\n            />\n          </div>\n          <div class=\"space-y-1\">\n            <Input\n              v-model=\"state.domain\"\n              label=\"Domain\"\n              type=\"text\"\n              placeholder=\"eg: tesla.com, mycompany.com\"\n            />\n          </div>\n          <div class=\"float-right flex space-x-2\">\n            <Button\n              label=\"Add\"\n              theme=\"gray\"\n              variant=\"solid\"\n              @click.prevent=\"addCustomer\"\n            />\n          </div>\n        </div>\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Dialog, Input, createResource, toast } from \"frappe-ui\";\nimport { reactive } from \"vue\";\n\nconst emit = defineEmits([\"customerCreated\"]);\nconst model = defineModel<boolean>();\n\nconst state = reactive({\n  customer: \"\",\n  domain: \"\",\n});\n\nconst customerResource = createResource({\n  url: \"frappe.client.insert\",\n  method: \"POST\",\n  data: {\n    doc: {\n      doctype: \"HD Customer\",\n      customer_name: state.customer,\n      domain: state.domain,\n    },\n  },\n  onSuccess: () => {\n    state.customer = \"\";\n    state.domain = \"\";\n    toast.success(\"Customer created\");\n    emit(\"customerCreated\");\n  },\n  onError: (err) => {\n    toast.error(err.messages[0]);\n  },\n});\n\nfunction addCustomer() {\n  if (!state.customer) {\n    toast.error(\"Customer name is required\");\n    return;\n  }\n  customerResource.submit({\n    doc: {\n      doctype: \"HD Customer\",\n      customer_name: state.customer,\n      domain: state.domain,\n    },\n  });\n}\n</script>\n","<template>\n  <Dialog :options=\"options\">\n    <template #body-main>\n      <div class=\"flex flex-col items-center gap-4 p-6\">\n        <div class=\"text-xl font-medium text-gray-900\">\n          {{ customer.doc?.name }}\n        </div>\n        <Avatar\n          size=\"lg\"\n          :label=\"customer.doc?.name\"\n          :image=\"customer.doc?.image\"\n          class=\"cursor-pointer hover:opacity-80\"\n        />\n        <div class=\"flex gap-2\">\n          <FileUploader @success=\"(file) => updateImage(file)\">\n            <template #default=\"{ uploading, openFileSelector }\">\n              <Button\n                :label=\"customer.doc?.image ? 'Change photo' : 'Upload photo'\"\n                :loading=\"uploading\"\n                @click=\"openFileSelector\"\n              />\n            </template>\n          </FileUploader>\n          <Button\n            v-if=\"customer.doc?.image\"\n            label=\"Remove photo\"\n            @click=\"updateImage(null)\"\n          />\n        </div>\n        <form class=\"w-full\" @submit.prevent=\"update\">\n          <Input v-model=\"domain\" label=\"Domain\" placeholder=\"example.com\" />\n        </form>\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  Avatar,\n  createDocumentResource,\n  Dialog,\n  FileUploader,\n  toast,\n} from \"frappe-ui\";\nimport { computed } from \"vue\";\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"customer-updated\"]);\n\nconst domain = computed({\n  get() {\n    return customer.doc?.domain;\n  },\n  set(d: string) {\n    customer.doc.domain = d;\n  },\n});\n\nconst customer = createDocumentResource({\n  doctype: \"HD Customer\",\n  name: props.name,\n  auto: true,\n  setValue: {\n    onSuccess() {\n      toast.success(\"Customer updated\");\n    },\n    onError() {\n      toast.error(\"Error updating customer\");\n    },\n  },\n});\n\nconst options = computed(() => ({\n  title: customer.doc?.name,\n  actions: [\n    {\n      label: \"Save\",\n      theme: \"gray\",\n      variant: \"solid\",\n      onClick: () => update(),\n    },\n  ],\n}));\n\nasync function update() {\n  await customer.setValue.submit({\n    domain: domain.value,\n  });\n  emit(\"customer-updated\");\n}\n\nfunction updateImage(file) {\n  customer.setValue.submit({\n    image: file?.file_url || null,\n  });\n  emit(\"customer-updated\");\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <LayoutHeader>\n      <template #left-header>\n        <div class=\"text-lg font-medium text-gray-900\">Customers</div>\n      </template>\n      <template #right-header>\n        <Button\n          label=\"New customer\"\n          theme=\"gray\"\n          variant=\"solid\"\n          @click=\"isDialogVisible = !isDialogVisible\"\n        >\n          <template #prefix>\n            <LucidePlus class=\"h-4 w-4\" />\n          </template>\n        </Button>\n      </template>\n    </LayoutHeader>\n    <ListViewBuilder\n      ref=\"listViewRef\"\n      :options=\"options\"\n      @row-click=\"openCustomer\"\n      @empty-state-action=\"isDialogVisible = true\"\n    />\n    <NewCustomerDialog\n      v-model=\"isDialogVisible\"\n      @customer-created=\"handleCustomer\"\n    />\n    <span v-if=\"isCustomerDialogVisible\">\n      <CustomerDialog\n        v-model=\"isCustomerDialogVisible\"\n        :name=\"selectedCustomer\"\n        @customer-updated=\"handleCustomer(true)\"\n      />\n    </span>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport LayoutHeader from \"@/components/LayoutHeader.vue\";\nimport ListViewBuilder from \"@/components/ListViewBuilder.vue\";\nimport NewCustomerDialog from \"@/components/desk/global/NewCustomerDialog.vue\";\nimport { Avatar, usePageMeta } from \"frappe-ui\";\nimport { computed, h, ref } from \"vue\";\nimport CustomerDialog from \"./CustomerDialog.vue\";\n\nconst isDialogVisible = ref(false);\nconst isCustomerDialogVisible = ref(false);\nconst selectedCustomer = ref(null);\nconst listViewRef = ref(null);\n// const emptyMessage = \"No Customers Found\";\n\nfunction openCustomer(id: string) {\n  selectedCustomer.value = id;\n  isCustomerDialogVisible.value = true;\n}\nfunction handleCustomer(updated = false) {\n  updated\n    ? (isCustomerDialogVisible.value = false)\n    : (isDialogVisible.value = false);\n  listViewRef.value?.reload();\n}\n\nconst options = computed(() => {\n  return {\n    doctype: \"HD Customer\",\n    selectable: true,\n    showSelectBanner: true,\n    columnConfig: {\n      name: {\n        prefix: ({ row }) => {\n          return h(Avatar, {\n            shape: \"circle\",\n            image: row.image,\n            label: row.name,\n            size: \"sm\",\n          });\n        },\n      },\n    },\n    emptyState: {\n      title: \"No Customers Found\",\n    },\n  };\n});\n\nusePageMeta(() => {\n  return {\n    title: \"Customers\",\n  };\n});\n</script>\n"],"names":["emit","__emit","model","_useModel","__props","state","reactive","customerResource","createResource","toast","err","addCustomer","_createElementBlock","_createVNode","_unref","Dialog","$event","_createElementVNode","_hoisted_1","_hoisted_2","Input","_cache","_hoisted_3","_hoisted_4","_component_Button","props","domain","computed","_a","customer","d","createDocumentResource","options","update","updateImage","file","_createBlock","_toDisplayString","Avatar","FileUploader","_withCtx","uploading","openFileSelector","_component_Input","isDialogVisible","ref","isCustomerDialogVisible","selectedCustomer","listViewRef","openCustomer","id","handleCustomer","updated","row","h","usePageMeta","_openBlock","LayoutHeader","_component_LucidePlus","ListViewBuilder","NewCustomerDialog","CustomerDialog"],"mappings":"0rCA0CA,MAAMA,EAAOC,EACPC,EAAQC,EAAoBC,EAAA,YAAC,EAE7BC,EAAQC,EAAS,CACrB,SAAU,GACV,OAAQ,EAAA,CACT,EAEKC,EAAmBC,EAAe,CACtC,IAAK,uBACL,OAAQ,OACR,KAAM,CACJ,IAAK,CACH,QAAS,cACT,cAAeH,EAAM,SACrB,OAAQA,EAAM,MAChB,CACF,EACA,UAAW,IAAM,CACfA,EAAM,SAAW,GACjBA,EAAM,OAAS,GACfI,EAAM,QAAQ,kBAAkB,EAChCT,EAAK,iBAAiB,CACxB,EACA,QAAUU,GAAQ,CAChBD,EAAM,MAAMC,EAAI,SAAS,CAAC,CAAC,CAC7B,CAAA,CACD,EAED,SAASC,GAAc,CACjB,GAAA,CAACN,EAAM,SAAU,CACnBI,EAAM,MAAM,2BAA2B,EACvC,MACF,CACAF,EAAiB,OAAO,CACtB,IAAK,CACH,QAAS,cACT,cAAeF,EAAM,SACrB,OAAQA,EAAM,MAChB,CAAA,CACD,CACH,8CAlFEO,EAkCM,MAAA,KAAA,CAjCJC,EAgCSC,EAAAC,CAAA,EAAA,YA/BEb,EAAK,2CAALA,EAAK,MAAAc,GACb,QAAS,CAAyC,MAAA,mBAAA,KAAA,IAAA,CAAA,GAExC,iBACT,IAyBM,CAzBNC,EAyBM,MAzBNC,EAyBM,CAxBJD,EAOM,MAPNE,EAOM,CANJN,EAKEC,EAAAM,CAAA,EAAA,CAJS,WAAAf,EAAM,SAAN,sBAAAgB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAL,GAAAX,EAAM,SAAQW,GACvB,MAAM,gBACN,KAAK,OACL,YAAY,uCAGhBC,EAOM,MAPNK,EAOM,CANJT,EAKEC,EAAAM,CAAA,EAAA,CAJS,WAAAf,EAAM,OAAN,sBAAAgB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAL,GAAAX,EAAM,OAAMW,GACrB,MAAM,SACN,KAAK,OACL,YAAY,yDAGhBC,EAOM,MAPNM,EAOM,CANJV,EAKEW,EAAA,CAJA,MAAM,MACN,MAAM,OACN,QAAQ,QACP,UAAeb,EAAW,CAAA,SAAA,CAAA,CAAA,iRCkBzC,MAAMc,EAAQrB,EAORJ,EAAOC,EAEPyB,EAASC,EAAS,CACtB,KAAM,OACJ,OAAOC,EAAAC,EAAS,MAAT,YAAAD,EAAc,MACvB,EACA,IAAIE,EAAW,CACbD,EAAS,IAAI,OAASC,CACxB,CAAA,CACD,EAEKD,EAAWE,EAAuB,CACtC,QAAS,cACT,KAAMN,EAAM,KACZ,KAAM,GACN,SAAU,CACR,WAAY,CACVhB,EAAM,QAAQ,kBAAkB,CAClC,EACA,SAAU,CACRA,EAAM,MAAM,yBAAyB,CACvC,CACF,CAAA,CACD,EAEKuB,EAAUL,EAAS,IAAO,OAAA,OAC9B,OAAOC,EAAAC,EAAS,MAAT,YAAAD,EAAc,KACrB,QAAS,CACP,CACE,MAAO,OACP,MAAO,OACP,QAAS,QACT,QAAS,IAAMK,EAAO,CACxB,CACF,CACA,EAAA,EAEF,eAAeA,GAAS,CAChB,MAAAJ,EAAS,SAAS,OAAO,CAC7B,OAAQH,EAAO,KAAA,CAChB,EACD1B,EAAK,kBAAkB,CACzB,CAEA,SAASkC,EAAYC,EAAM,CACzBN,EAAS,SAAS,OAAO,CACvB,OAAOM,GAAA,YAAAA,EAAM,WAAY,IAAA,CAC1B,EACDnC,EAAK,kBAAkB,CACzB,2DAtGEoC,EAiCStB,EAAAC,CAAA,EAAA,CAjCA,QAASiB,EAAO,OAAA,CACZ,cACT,IA6BM,aAAA,OA7BNf,EA6BM,MA7BNC,GA6BM,CA5BJD,EAEM,MAFNE,GAEMkB,GADDvB,EAAAA,KAAS,MAATA,YAAAA,EAAc,IAAI,EAAA,CAAA,EAEvBD,EAKEC,EAAAwB,CAAA,EAAA,CAJA,KAAK,KACJ,OAAOxB,EAAAA,EAAAe,CAAA,EAAS,MAATf,YAAAA,EAAc,KACrB,OAAOA,EAAAA,EAAAe,CAAA,EAAS,MAATf,YAAAA,EAAc,MACtB,MAAM,6DAERG,EAeM,MAfNK,GAeM,CAdJT,EAQeC,EAAAyB,CAAA,EAAA,CARA,UAAUlB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAc,GAASD,EAAYC,CAAI,EAAA,GACrC,QACTK,EAAA,CAIE,CALkB,UAAAC,EAAW,iBAAAC,KAAgB,OAAA,OAC/C7B,EAIEW,EAAA,CAHC,OAAOV,EAAAA,EAAAe,CAAA,EAAS,MAATf,MAAAA,EAAc,MAAK,eAAA,eAC1B,QAAS2B,EACT,QAAOC,CAAA,kDAKN5B,EAAAA,EAAQe,CAAA,EAAC,MAATf,MAAAA,EAAc,WADtBsB,EAIEZ,EAAA,OAFA,MAAM,eACL,uBAAOU,EAAW,IAAA,EAAA,eAGvBjB,EAEO,OAAA,CAFD,MAAM,SAAU,WAAgBgB,EAAM,CAAA,SAAA,CAAA,CAAA,GAC1CpB,EAAmE8B,EAAA,YAAnDjB,EAAM,2CAANA,EAAM,MAAAV,GAAE,MAAM,SAAS,YAAY,gJCgBvD,MAAA4B,EAAkBC,EAAI,EAAK,EAC3BC,EAA0BD,EAAI,EAAK,EACnCE,EAAmBF,EAAI,IAAI,EAC3BG,EAAcH,EAAI,IAAI,EAG5B,SAASI,EAAaC,EAAY,CAChCH,EAAiB,MAAQG,EACzBJ,EAAwB,MAAQ,EAClC,CACS,SAAAK,EAAeC,EAAU,GAAO,OACvCA,EACKN,EAAwB,MAAQ,GAChCF,EAAgB,MAAQ,IAC7BhB,EAAAoB,EAAY,QAAZ,MAAApB,EAAmB,QACrB,CAEM,MAAAI,EAAUL,EAAS,KAChB,CACL,QAAS,cACT,WAAY,GACZ,iBAAkB,GAClB,aAAc,CACZ,KAAM,CACJ,OAAQ,CAAC,CAAE,IAAA0B,KACFC,EAAEhB,EAAQ,CACf,MAAO,SACP,MAAOe,EAAI,MACX,MAAOA,EAAI,KACX,KAAM,IAAA,CACP,CAEL,CACF,EACA,WAAY,CACV,MAAO,oBACT,CAAA,EAEH,EAED,OAAAE,EAAY,KACH,CACL,MAAO,WAAA,EAEV,kCAzFC,OAAAC,EAAA,EAAA5C,EAmCM,MAnCNM,GAmCM,CAlCJL,EAgBe4C,EAAA,KAAA,CAfF,gBACT,IAA8DpC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAA9DJ,EAA8D,MAAzD,CAAA,MAAM,qCAAoC,YAAS,EAAA,CAAA,IAE/C,iBACT,IASS,CATTJ,EASSW,EAAA,CARP,MAAM,eACN,MAAM,OACN,QAAQ,QACP,QAAKH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAL,GAAE4B,EAAe,MAAA,CAAIA,EAAe,MAAA,GAE/B,SACT,IAA8B,CAA9B/B,EAA8B6C,EAAA,CAAlB,MAAM,UAAS,CAAA,iBAKnC7C,EAKE8C,EAAA,SAJI,cAAJ,IAAIX,EACH,QAAShB,EAAO,MAChB,WAAWiB,EACX,kCAAoBL,EAAe,MAAA,yBAEtC/B,EAGE+C,EAAA,YAFShB,EAAe,2CAAfA,EAAe,MAAA5B,GACvB,kBAAkBmC,0BAETL,EAAuB,WAAnClC,EAMO,OAAAO,GAAA,CALLN,EAIEgD,GAAA,YAHSf,EAAuB,2CAAvBA,EAAuB,MAAA9B,GAC/B,KAAM+B,EAAgB,MACtB,iCAAkBI,EAAc,EAAA"}