import { s as J, h as Q, a as W, p as ee, _ as te } from "./formCustomisation-44f18b9b.js"; import { d as P, c as g, X as A, e as c, k as f, l as p, s as z, t as ae, y as v, f as $, v as le, I as k, a0 as H, a as se, A as V, p as oe, aO as ne, K as y, aP as B, N as ie, M as re, g as h, w as T, h as o, F as de, G as ue, x as ce, az as E, aD as O, u as me, q as pe, Z as fe, aN as j } from "./index-54e545bb.js"; import { _ as ve } from "./Breadcrumbs.vue_vue_type_script_setup_true_lang-04848fc3.js"; import { a as he } from "./more-horizontal-b561c647.js"; import "./dayjs-8f71cd34.js"; import { L as _e } from "./knowledgeBase-de4d1c97.js"; import { _ as L } from "./Autocomplete-3aa3344b.js"; import { _ as ge } from "./Link-5130f40e.js"; import { g as ke } from "./globalStore-842ad0ec.js"; import { s as q } from "./index-587a74f3.js"; import { _ as ye } from "./SearchArticles.vue_vue_type_script_setup_true_lang-a1e3621d.js"; import { _ as M } from "./TicketTextEditor.vue_vue_type_script_setup_true_lang-d737e6e9.js"; import "./Dropdown.vue_vue_type_script_setup_true_lang-20398480.js"; import "./AttachmentItem.vue_vue_type_script_setup_true_lang-f98cb03f.js"; import "./FileUploader-3bc7c8ba.js"; import "./TextEditor-bf30f06f.js"; import "./UserAvatar.vue_vue_type_script_setup_true_lang-73349f36.js"; import "./Avatar.vue_vue_type_script_setup_true_lang-33c4215a.js"; const be = { key: 0, class: "space-y-1.5" }, xe = { class: "block text-sm text-gray-700" }, Ce = { key: 0, class: "place-self-center text-red-500" }, we = P({
    __name: "UniInput", props: { field: {}, value: { type: [String, Number, Boolean] } }, emits: ["change"], setup(F, { emit: b }) {
        const s = F, x = b, N = g(() => s.field.url_method ? k(L, { options: D.data }) : s.field.fieldtype === "Link" && s.field.options ? k(ge, { doctype: s.field.options, filters: s.field.filters }) : s.field.fieldtype === "Select" ? k(L, {
            options: s.field.options.split(`
`).map(l => ({ label: l, value: l }))
        }) : s.field.fieldtype === "Check" ? k(L, { options: [{ label: "Yes", value: 1 }, { label: "No", value: 0 }] }) : k(H, { debounce: 500 })), D = A({ url: s.field.url_method, auto: !!s.field.url_method, transform: l => l.map(n => ({ label: n, value: n })) }), C = g(() => s.field.fieldtype === "Check" ? s.value ? "Yes" : "No" : s.value), w = g(() => s.field.fieldtype === "Data" && !s.field.url_method ? "Type something" : "Select an option"); function u(l, n) { x("change", { fieldname: l, value: n }) } return (l, n) => l.field.display_via_depends_on ? (c(), f("div", be, [p("span", xe, [z(ae(l.field.label) + " ", 1), l.field.required ? (c(), f("span", Ce, " * ")) : v("", !0)]), (c(), $(le(N.value), { placeholder: w.value, value: C.value, "model-value": C.value, "onUpdate:modelValue": n[0] || (n[0] = i => u(l.field.fieldname, i)), onChange: n[1] || (n[1] = i => { var m; return u(l.field.fieldname, ((m = i.target) == null ? void 0 : m.value) || i.value || i) }) }, null, 40, ["placeholder", "value", "model-value"]))])) : v("", !0)
    }
}), Se = { class: "flex flex-col overflow-y-auto" }, Te = { class: "flex flex-col gap-5 py-6 h-full flex-1 self-center overflow-auto mx-auto w-full max-w-4xl px-5" }, $e = { key: 0, class: "" }, Fe = ["innerHTML"], Ne = { key: 1, class: "grid grid-cols-1 gap-4 sm:grid-cols-3" }, De = { class: "flex flex-col gap-2" }, Ie = { key: 1 }, Ue = { class: "text-p-sm text-gray-500 ml-1" }, Ve = { key: 2 }, Qe = P({ __name: "TicketNew", props: { templateId: { default: "" } }, setup(F) { const b = F, s = pe(), x = me(), { $dialog: N } = ke(), { updateOnboardingStep: D } = he("helpdesk"), { isManager: C, userId: w } = se(), u = V(""), l = V(""), n = V([]), i = oe({}), m = A({ url: "terrasuitehelpdesk.terrasuitehelpdesk.doctype.hd_ticket_template.api.get_one", makeParams: () => ({ name: b.templateId || "Default" }), auto: !0, onSuccess: e => { l.value = e.description_template || "", I = window.structuredClone(e.fields || []), J(m, { doc: i, call: fe, router: x, $dialog: N, applyFilters: Y }), R(e.fields) } }); function R(e) { e.forEach(t => { i[t.fieldname] = "" }) } let I = []; function Y(e, t = null) { const r = m.data.fields.find(d => d.fieldname === e); r && (r.fieldtype === "Select" ? Q(r, e, t, i, I) : r.fieldtype === "Link" && W(r, e, t, i, I)) } const G = g(() => { var e; return (e = m.data) == null ? void 0 : e._customOnChange }), U = g(() => { var t, r; let e = (r = (t = m.data) == null ? void 0 : t.fields) == null ? void 0 : r.filter(d => s.meta.agent || !d.hide_from_customer); return e ? e.map(d => ee(d, i)) : [] }); function K(e, t, r) { var a; i[t] = e.value; const d = (a = G.value) == null ? void 0 : a[t]; d && d.forEach(_ => { _(e.value, r) }) } const S = A({ url: "terrasuitehelpdesk.terrasuitehelpdesk.doctype.hd_ticket.api.new", debounce: 300, makeParams: () => ({ doc: { description: l.value, subject: u.value, template: b.templateId, ...i }, attachments: n.value }), validate: e => { var d; const r = [...((d = U.value) == null ? void 0 : d.filter(a => a.required)) || [], "subject", "description"]; for (const a of r) if (ne.isEmpty(e.doc[a.fieldname || a])) return `${a.label || a} is required` }, onSuccess: e => { x.push({ name: y.value ? "TicketCustomer" : "TicketAgent", params: { ticketId: e.name } }), C && D("create_first_ticket", !0, !1, () => localStorage.setItem("firstTicket", e.name)), y.value && B("new_ticket_submitted", { data: { user: w, ticketID: e.name, subject: u.value, description: l.value, customFields: i } }) } }); function X(e) { return q(e, { allowedTags: q.defaults.allowedTags.concat(["img"]) }) } const Z = g(() => [{ label: "Tickets", route: { name: "TicketsCustomer" } }, { label: "New Ticket", route: { name: "TicketNew" } }]); return ie(() => ({ title: "New Ticket" })), re(() => { B("new_ticket_page", { data: { user: w } }) }), (e, t) => { var d; const r = te; return c(), f("div", Se, [h(o(_e), null, { "left-header": T(() => [h(o(ve), { items: Z.value }, null, 8, ["items"])]), "right-header": T(() => { var a, _; return [(a = o(m).data) != null && a._customActions ? (c(), $(r, { key: 0, actions: (_ = o(m).data) == null ? void 0 : _._customActions }, null, 8, ["actions"])) : v("", !0)] }), _: 1 }), p("div", Te, [(d = o(m).data) != null && d.about ? (c(), f("div", $e, [p("div", { class: "prose-f", innerHTML: X(o(m).data.about) }, null, 8, Fe)])) : v("", !0), U.value ? (c(), f("div", Ne, [(c(!0), f(de, null, ue(U.value, a => (c(), $(o(we), { key: a.fieldname, field: a, value: i[a.fieldname], onChange: _ => K(_, a.fieldname, a.fieldtype) }, null, 8, ["field", "value", "onChange"]))), 128))])) : v("", !0), p("div", { class: ce(["flex flex-col", (u.value.length >= 2 || l.value.length) && "gap-5"]) }, [p("div", De, [t[7] || (t[7] = p("span", { class: "block text-sm text-gray-700" }, [z(" Subject "), p("span", { class: "place-self-center text-red-500" }, " * ")], -1)), h(o(H), { modelValue: u.value, "onUpdate:modelValue": t[0] || (t[0] = a => u.value = a), type: "text", placeholder: "A short description" }, null, 8, ["modelValue"])]), o(y) ? (c(), $(ye, { key: 0, query: u.value, class: "shadow" }, null, 8, ["query"])) : v("", !0), o(y) ? (c(), f("div", Ie, [E(p("h4", Ue, " Please enter a subject to continue ", 512), [[O, u.value.length <= 2 && l.value.length === 0]]), E(h(M, { ref: "editor", attachments: n.value, "onUpdate:attachments": t[2] || (t[2] = a => n.value = a), content: l.value, "onUpdate:content": t[3] || (t[3] = a => l.value = a), placeholder: "Detailed explanation", expand: "" }, { "bottom-right": T(() => [h(o(j), { label: "Submit", theme: "gray", variant: "solid", disabled: e.$refs.editor.editor.isEmpty || o(S).loading || !u.value, onClick: t[1] || (t[1] = () => o(S).submit()) }, null, 8, ["disabled"])]), _: 1 }, 8, ["attachments", "content"]), [[O, u.value.length > 2 || l.value.length > 0]])])) : v("", !0)], 2), o(y) ? v("", !0) : (c(), f("div", Ve, [h(M, { ref: "editor", attachments: n.value, "onUpdate:attachments": t[5] || (t[5] = a => n.value = a), content: l.value, "onUpdate:content": t[6] || (t[6] = a => l.value = a), placeholder: "Detailed explanation", expand: "" }, { "bottom-right": T(() => [h(o(j), { label: "Submit", theme: "gray", variant: "solid", disabled: e.$refs.editor.editor.isEmpty || o(S).loading || !u.value, onClick: t[4] || (t[4] = () => o(S).submit()) }, null, 8, ["disabled"])]), _: 1 }, 8, ["attachments", "content"])]))])]) } } }); export { Qe as default };
//# sourceMappingURL=TicketNew-64253468.js.map
